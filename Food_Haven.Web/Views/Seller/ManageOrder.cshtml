<!doctype html>
<html lang="en" data-layout="vertical" data-topbar="light" data-sidebar="dark" data-sidebar-size="lg"
      data-sidebar-image="none" data-preloader="disable" data-theme="default" data-theme-colors="default">


<!-- Mirrored from EasyFood.com/velzon/html/master/apps-ecommerce-orders.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 26 Feb 2025 12:20:44 GMT -->

<head>

    <meta charset="utf-8" />
    <title>Orders | Velzon - Admin & Dashboard Template</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Premium Multipurpose Admin & Dashboard Template" name="description" />
    <meta content="EasyFood" name="author" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/assetsAdmin/images/favicon.svg">

    <!-- Sweet Alert css-->
    <link href="~/assetsAdmin/libs/sweetalert2/sweetalert2.min.css" rel="stylesheet" type="text/css" />

    <!-- Layout config Js -->
    <script src="~/assetsAdmin/js/layout.js"></script>
    <!-- Bootstrap Css -->
    <link href="~/assetsAdmin/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- Icons Css -->
    <link href="~/assetsAdmin/css/icons.min.css" rel="stylesheet" type="text/css" />
    <!-- App Css-->
    <link href="~/assetsAdmin/css/app.min.css" rel="stylesheet" type="text/css" />
    <!-- custom Css-->
    <link href="~/assetsAdmin/css/custom.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/~/assetsAdmin/libs/gridjs/gridjs.umd.js">
    <link rel="stylesheet" href="/~/assetsAdmin/libs/gridjs/theme/mermaid.min.css">
    <!-- Grid.js CSS -->
    <link href="https://unpkg.com/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
    <!-- Bootstrap CSS -->
    <!-- Remix Icons -->
    <link href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css" rel="stylesheet">
    <!-- Lord Icon -->
    <script src="https://cdn.lordicon.com/libs/mssddfmo/lord-icon-2.1.0.js"></script>

</head>

<body>

    <!-- Begin page -->
    <div id="layout-wrapper">

        @await Html.PartialAsync("_headeradmin")

        <!-- ========== App Menu ========== -->
        <div class="app-menu navbar-menu">
            <!-- LOGO -->
            <div class="navbar-brand-box">
                <!-- Dark Logo-->
                <a class="logo logo-dark">
                    <span class="logo-sm">
                        <img src="~/assetsAdmin/images/logo-sm.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/assetsAdmin/images/logo-dark.svg" alt="" height="35">
                    </span>
                </a>
                <!-- Light Logo-->
                <a class="logo logo-light">
                    <span class="logo-sm">
                        <img src="~/assetsAdmin/images/logo-sm.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/assetsAdmin/images/logo-light.svg" alt="" height="35">
                    </span>
                </a>
                <button type="button" class="btn btn-sm p-0 fs-20 header-item float-end btn-vertical-sm-hover"
                        id="vertical-hover">
                    <i class="ri-record-circle-line"></i>
                </button>
            </div>

            <div id="scrollbar">
                <div class="container-fluid">
                    <div id="two-column-menu">
                    </div>
                    <ul class="navbar-nav" id="navbar-nav">
                        <li class="menu-title"><span data-key="t-menu">Menu</span></li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="index">
                                <i class=" ri-pie-chart-line"></i> <span>Revenue Statistics</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ViewStore">
                                <i class="ri-store-2-line"></i> <span>Store</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ViewProductList">
                                <i class="ri-restaurant-2-fill"></i> <span>Products</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link active" asp-controller="seller" asp-action="ManageOrder">
                                <i class="ri-file-copy-2-line"></i> <span>Sales History</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ManagerComplant">
                                <i class="ri-error-warning-line"></i> <span>Order Complaint</span>
                            </a>
                        </li>
                        <li class="nav-item"></li>
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="feedbacklist">
                                <i class="ri-question-answer-line"></i> <span>Feedback</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ManagerVoucher">
                                <i class="ri-price-tag-3-line"></i> <span>Vouchers</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="Chat">
                                <i class=" ri-chat-3-line"></i> <span>Chat</span>
                            </a>
                        </li>
                    </ul>
                </div>

            </div>
            <!-- Sidebar -->
        </div>
        <div class="sidebar-background"></div>
    </div>
    <!-- Left Sidebar End -->
    <!-- Vertical Overlay-->
    <div class="vertical-overlay"></div>

    <!-- ============================================================== -->
    <!-- Start right Content here -->
    <!-- ============================================================== -->
    <div class="main-content">

        <div class="page-content">
            <div class="container-fluid">

                <!-- start page title -->
                <div class="row">
                    <div class="col-12">
                        <div class="page-title-box d-sm-flex align-items-center justify-content-between bg-galaxy-transparent">
                            <h4 class="mb-sm-0">Orders</h4>

                            <div class="page-title-right">
                                <ol class="breadcrumb m-0">
                                    <li class="breadcrumb-item"><a href="javascript: void(0);">Ecommerce</a></li>
                                    <li class="breadcrumb-item active">Orders</li>
                                </ol>
                            </div>

                        </div>
                    </div>
                </div>
                <!-- end page title -->

                <div class="row">
                    <div class="col-lg-12">
                        <div class="card" id="orderList">
                            <div class="card-header border-0">
                                <div class="row align-items-center gy-3">
                                    <div class="col-sm">
                                        <h5 class="card-title mb-0">Order History</h5>
                                    </div>
                                    <!-- <div class="col-sm-auto">
                                        <div class="d-flex gap-1 flex-wrap">
                                            <button type="button" class="btn btn-success add-btn"
                                                data-bs-toggle="modal" id="create-btn"
                                                data-bs-target="#showModal"><i
                                                    class="ri-add-line align-bottom me-1"></i> Create Order</button>
                                            <button type="button" class="btn btn-info"><i
                                                    class="ri-file-download-line align-bottom me-1"></i>
                                                Import</button>
                                            <button class="btn btn-soft-danger" id="remove-actions"
                                                onClick="deleteMultiple()"><i
                                                    class="ri-delete-bin-2-line"></i></button>
                                        </div>
                                    </div> -->
                                </div>
                            </div>


                            <div class="card-body pt-0">
                                <div>
                                    <ul class="nav nav-tabs nav-tabs-custom nav-success mb-3" role="tablist">
                                        <!-- Existing tabs... -->
                                        <li class="nav-item">
                                            <a class="nav-link py-3 Pending active" data-bs-toggle="tab" href="#pending" role="tab" aria-selected="false">
                                                <i class="ri-time-line me-1 align-bottom"></i> Pending
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link py-3 Preparing" data-bs-toggle="tab" href="#preparing" role="tab" aria-selected="false">
                                                <i class="ri-restaurant-line me-1 align-bottom"></i> Preparing
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link py-3 Delivering" data-bs-toggle="tab" href="#delivering" role="tab" aria-selected="false">
                                                <i class="ri-truck-line me-1 align-bottom"></i> Delivering
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link py-3 Confirmed" data-bs-toggle="tab" href="#confirmed" role="tab" aria-selected="false">
                                                <i class="ri-checkbox-circle-line me-1 align-bottom"></i> Confirmed
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link py-3 CancelledUser" data-bs-toggle="tab" href="#cancelledUser" role="tab" aria-selected="false">
                                                <i class="ri-close-circle-line me-1 align-bottom"></i> Cancelled by User
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link py-3 CancelledShop" data-bs-toggle="tab" href="#cancelledShop" role="tab" aria-selected="false">
                                                <i class="ri-store-3-line me-1 align-bottom"></i> Cancelled by Shop
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link py-3 FailedDelivery" data-bs-toggle="tab" href="#failedDelivery" role="tab" aria-selected="false">
                                                <i class="ri-error-warning-line me-1 align-bottom"></i> Delivery Failed
                                            </a>
                                        </li>
                                    </ul>


                                    <div class="tab-content">
                                        <div class="tab-pane active" id="pending" role="tabpanel"><div class="table-responsive table-card mb-1"><div id="pendingTable"></div></div></div>
                                        <div class="tab-pane" id="preparing" role="tabpanel"><div class="table-responsive table-card mb-1"><div id="preparingTable"></div></div></div>
                                        <div class="tab-pane" id="delivering" role="tabpanel"><div class="table-responsive table-card mb-1"><div id="deliveringTable"></div></div></div>
                                        <div class="tab-pane" id="confirmed" role="tabpanel"><div class="table-responsive table-card mb-1"><div id="confirmedTable"></div></div></div>
                                        <div class="tab-pane" id="cancelledUser" role="tabpanel"><div class="table-responsive table-card mb-1"><div id="cancelledUserTable"></div></div></div>
                                        <div class="tab-pane" id="cancelledShop" role="tabpanel"><div class="table-responsive table-card mb-1"><div id="cancelledShopTable"></div></div></div>
                                        <div class="tab-pane" id="failedDelivery" role="tabpanel"><div class="table-responsive table-card mb-1"><div id="failedDeliveryTable"></div></div></div>

                                    </div>
                                </div>
                            </div>

                            <!-- Grid.js Script -->
                            <script src="https://unpkg.com/gridjs/dist/gridjs.umd.js"></script>
                            <!-- Bootstrap JS -->
                            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

                            <script>
                                document.addEventListener("DOMContentLoaded", function () {
                                    function fetchOrders() {
                                        fetch("/seller/GetOrder", {
                                            method: "POST",
                                            headers: { "Content-Type": "application/json" },
                                            body: JSON.stringify({})
                                        })
                                            .then(response => response.json())
                                            .then(data => {
                                                console.log("Orders Data:", data);

                                                if (!data || data === false || (data.msg && typeof data.msg === "string")) {
                                                    console.warn("Không có dữ liệu đơn hàng hoặc lỗi:", data?.msg || "No data");
                                                    renderTables([]);
                                                    return;
                                                }

                                                renderTables(data);
                                            })
                                            .catch(error => console.error("Error fetching orders:", error));
                                    }

                                    function renderTables(orders) {
                                        function createGrid(elementId, filterStatus = null) {
                                            const filteredData = filterStatus
                                                ? orders.filter(order => order.status?.toUpperCase() === filterStatus.toUpperCase())
                                                : orders;

                                            new gridjs.Grid({
                                                columns: [
                                                    { id: "stt", name: "STT" },
                                                    {
                                                        id: "orderTracking",
                                                        name: "Order Code",
                                                        formatter: (cell) => {
                                                            return gridjs.html(`<a  href="/seller/ViewOrderDetails/${cell}" target="_blank" class="fw-medium link-primary">${cell}</a>`);
                                                        }
                                                    },
                                                    { id: "userName", name: "Customer" },
                                                    {
                                                        id: "orderDate",
                                                        name: "Order Date",
                                                        formatter: (e) => {
                                                            if (!e) return "N/A";
                                                            const date = new Date(e);
                                                            return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:${date.getSeconds().toString().padStart(2, '0')}`;
                                                        }
                                                    },
                                                    { id: "quantity", name: "Quantity" },
                                                    { id: "total", name: "Total", formatter: cell => `$${(cell || 0).toLocaleString()}` },
                                                    {
                                                        id: "status",
                                                        name: "Status",
                                                        formatter: cell => {
                                                            const color = {
                                                                "SUCCESS": "success",
                                                                "FAILED": "danger",
                                                                "PROCESSING": "warning",
                                                                "PENDING": "secondary",
                                                                "PREPARING IN KITCHEN": "warning",
                                                                "DELIVERING": "info",
                                                                "CONFIRMED": "success",
                                                                "CANCELLED BY USER": "danger",
                                                                "CANCELLED BY SHOP": "danger",
                                                                "DELIVERY FAILED": "danger"
                                                            }[cell?.toUpperCase()] || "secondary";

                                                            return gridjs.html(`<span class="badge bg-${color}-subtle text-${color} text-uppercase">${cell || 'N/A'}</span>`);
                                                        }
                                                    },
                                                    {
                                                        name: "Action",
                                                        formatter: (cell, row) => {
                                                            const orderId = row.cells[1]?.data; // orderTracking
                                                            const status = row.cells[6]?.data?.toUpperCase(); // status column (cột thứ 7)

                                                            const viewBtn = `
                                                                            <a href="/seller/ViewOrderDetails/${orderId}" target="_blank" class="btn btn-sm btn-outline-primary me-1">
                                                <i class="ri-eye-line"></i> View
                                            </a>`;

                                                            const cancelBtn = (status === "PENDING" || status === "PREPARING IN KITCHEN")
                                                                ? `<button class="btn btn-sm btn-outline-danger" onclick="cancelOrder('${orderId}')">
                                                   <i class="ri-close-line"></i> Cancel order
                                               </button>`
                                                                : "";

                                                            return gridjs.html(viewBtn + cancelBtn);
                                                        }
                                                    }

                                                ],
                                                data: filteredData.map((item, index) => ({
                                                    ...item,
                                                    stt: index + 1 // ✅ Reset STT cho từng bảng
                                                })),
                                                sort: true,
                                                pagination: { enabled: true, limit: 5 },
                                                search: true,
                                                language: {
                                                    search: {
                                                        placeholder: ''
                                                    },
                                                    pagination: {
                                                        previous: 'Previous',
                                                        next: 'Next',
                                                        showing: 'Showing',
                                                        results: () => 'orders'
                                                    },
                                                    loading: 'Loading...',
                                                    noRecordsFound: 'No orders found.'
                                                }

                                            }).render(document.getElementById(elementId));
                                        }


                                        const statusMappings = {
                                            "pendingTable": "PENDING",
                                            "preparingTable": "PREPARING IN KITCHEN",
                                            "deliveringTable": "DELIVERING",
                                            "confirmedTable": "CONFIRMED",
                                            "cancelledUserTable": "CANCELLED BY USER",
                                            "cancelledShopTable": "CANCELLED BY SHOP",
                                            "failedDeliveryTable": "DELIVERY FAILED"
                                        };

                                        Object.entries(statusMappings).forEach(([elementId, status]) => {
                                            const container = document.getElementById(elementId);
                                            if (!container) {
                                                console.warn(`❌ Không tìm thấy phần tử ID "${elementId}" trong DOM.`);
                                                return;
                                            }

                                            container.innerHTML = "";
                                            createGrid(elementId, status);
                                        });
                                    }

                                    fetchOrders();
                                });
                            </script>
                          



                        </div>

                    </div>
                    <!--end col-->
                </div>
                <!--end row-->

            </div>
            <!-- container-fluid -->
        </div>
        <!-- End Page-content -->
        <!-- <div class="modal fade flip show" id="deleteOrder" tabindex="-1" style="display: block;" aria-modal="true"
            role="dialog">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-body p-5 text-center">
                        <lord-icon src="https://cdn.lordicon.com/gsqxdxog.json" trigger="loop"
                            colors="primary:#405189,secondary:#f06548" style="width:90px;height:90px"></lord-icon>
                        <div class="mt-4 text-center">
                            <h4>You are about to delete a order ?</h4>
                            <p class="text-muted fs-15 mb-4">Deleting your order will remove all of your information
                                from our
                                database.</p>
                            <div class="hstack gap-2 justify-content-center remove">
                                <button class="btn btn-link link-success fw-medium text-decoration-none"
                                    id="deleteRecord-close" data-bs-dismiss="modal"><i
                                        class="ri-close-line me-1 align-middle"></i> Close</button>
                                <button class="btn btn-danger" id="delete-record">Yes, Delete It</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div> -->
        <footer class="footer">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-6">
                        <script>document.write(new Date().getFullYear())</script> © Velzon.
                    </div>
                    <div class="col-sm-6">
                        <div class="text-sm-end d-none d-sm-block">
                            Design & Develop by EasyFood
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <!-- end main content-->
    </div>
    <!-- END layout-wrapper -->
    <!--start back-to-top-->
    <button onclick="topFunction()" class="btn btn-danger btn-icon" id="back-to-top">
        <i class="ri-arrow-up-line"></i>
    </button>
    <!--end back-to-top-->
    <!--preloader-->
    <div id="preloader">
        <div id="status">
            <div class="spinner-border text-primary avatar-sm" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

   
    </div>

    <!-- JAVASCRIPT -->
    <script src="~/assetsAdmin/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/assetsAdmin/libs/simplebar/simplebar.min.js"></script>
    <script src="~/assetsAdmin/libs/node-waves/waves.min.js"></script>
    <script src="~/assetsAdmin/libs/feather-icons/feather.min.js"></script>
    <script src="~/assetsAdmin/js/pages/plugins/lord-icon-2.1.0.js"></script>
    <script src="~/assetsAdmin/js/plugins.js"></script>

    <!-- list.js min js -->
    <script src="~/assetsAdmin/libs/list.js/list.min.js"></script>

    <!--list pagination js-->
    <script src="~/assetsAdmin/libs/list.pagination.js/list.pagination.min.js"></script>

    <!-- ecommerce-order init js -->
    <script src="~/assetsAdmin/js/pages/ecommerce-order.init.js"></script>

    <!-- Sweet Alerts js -->
    <script src="~/assetsAdmin/libs/sweetalert2/sweetalert2.min.js"></script>

    <!-- App js -->
    <script src="~/assetsAdmin/js/app.js"></script>
    <style>
        /* Màu số phân trang là đen */
        .gridjs .gridjs-pages button {
            color: #000 !important;
        }

        /* Đậm hơn khi đang chọn */
        .gridjs .gridjs-pages .gridjs-currentPage {
            font-weight: bold;
            text-decoration: underline;
        }

        /* Tùy chọn nút nhỏ */
        .gridjs .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
            border-radius: 4px;
        }
/* 
        input.gridjs-input {
            appearance: none !important;
            -webkit-appearance: none !important;
            -moz-appearance: none !important;
            background-color: #fff !important;
            border: 1px solid #d2d6dc !important;
            border-radius: 5px !important;
            font-size: 14px !important;
            line-height: 1.45 !important;
            outline: none !important;
            padding: 0 0 32.4px 14px !important;
        } */


    </style>

</body>


</html>