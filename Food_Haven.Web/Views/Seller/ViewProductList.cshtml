@model List<Repository.ViewModels.ProductIndexViewModel>
@{
    var storeId = ViewBag.StoreId;
    bool storeStatus = ViewBag.StoreStatus ?? false;
    string storeStatusText = ViewBag.StoreStatusText as string ?? "Approved";
}
<!doctype html>
<html lang="en" data-layout="vertical" data-topbar="light" data-sidebar="dark" data-sidebar-size="lg"
    data-sidebar-image="none" data-preloader="disable" data-theme="default" data-theme-colors="default">


<!-- Mirrored from EasyFood.com/velzon/html/master/forms-layouts.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 26 Feb 2025 12:22:12 GMT -->

<head>

    <meta charset="utf-8" />
    <title>EasyFood | Seller</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Premium Multipurpose Admin & Dashboard Template" name="description" />
    <meta content="EasyFood" name="author" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/assetsAdmin/images/favicon.svg">

    <!-- gridjs css -->
    <link rel="stylesheet" href="~/assetsAdmin/libs/gridjs/theme/mermaid.min.css">

    <!-- Layout config Js -->
    <script src="~/assetsAdmin/js/layout.js"></script>
    <!-- Bootstrap Css -->
    <link href="~/assetsAdmin/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- Icons Css -->
    <link href="~/assetsAdmin/css/icons.min.css" rel="stylesheet" type="text/css" />
    <!-- App Css-->
    <link href="~/assetsAdmin/css/app.min.css" rel="stylesheet" type="text/css" />
    <!-- custom Css-->
    <link href="~/assetsAdmin/css/custom.min.css" rel="stylesheet" type="text/css" />
    <!-- Bootstrap Bundle (JS + Popper) -->
    @* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script> *@
</head>

<body>

    <!-- Begin page -->
    <div id="layout-wrapper">

        @await Html.PartialAsync("_headeradmin")


        <!-- ========== App Menu ========== -->
        <div class="app-menu navbar-menu">
            <!-- LOGO -->
            <div class="navbar-brand-box">
                <!-- Dark Logo-->
                <a href="/" class="logo logo-dark">
                    <span class="logo-sm">
                        <img src="~/assetsAdmin/images/logo-sm.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/assetsAdmin/images/logo-dark.svg" alt="" height="35">
                    </span>
                </a>
                <!-- Light Logo-->
                <a href="/" class="logo logo-light">
                    <span class="logo-sm">
                        <img src="~/assetsAdmin/images/logo-sm.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/assetsAdmin/images/logo-light.svg" alt="" height="35">
                    </span>
                </a>
                <button type="button" class="btn btn-sm p-0 fs-20 header-item float-end btn-vertical-sm-hover"
                    id="vertical-hover">
                    <i class="ri-record-circle-line"></i>
                </button>
            </div>

            <div id="scrollbar">
                <div class="container-fluid">
                    <div id="two-column-menu">
                    </div>
                    <ul class="navbar-nav" id="navbar-nav">
                        <li class="menu-title"><span data-key="t-menu">Menu</span></li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="index">
                                <i class=" ri-pie-chart-line"></i> <span>Revenue Statistics</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ViewStore">
                                <i class="ri-store-2-line"></i> <span>Store</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link active" asp-controller="seller" asp-action="ViewProductList">
                                <i class="ri-restaurant-2-fill"></i> <span>Products</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ManageOrder">
                                <i class="ri-file-copy-2-line"></i> <span>Sales History</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ManagerComplant">
                                <i class="ri-error-warning-line"></i> <span>Order Complaint</span>
                            </a>
                        </li>
                        <li class="nav-item"></li>
                        <a class="nav-link menu-link" asp-controller="seller" asp-action="feedbacklist">
                            <i class="ri-question-answer-line"></i> <span>Feedback</span>
                        </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="ManagerVoucher">
                                <i class="ri-price-tag-3-line"></i> <span>Vouchers</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="seller" asp-action="Chat">
                                <i class=" ri-chat-3-line"></i> <span>Chat</span>
                            </a>
                        </li>
                    </ul>
                </div>

            </div>
            <!-- Sidebar -->
        </div>
        <div class="sidebar-background"></div>
    </div>
    <!-- Left Sidebar End -->
    <!-- Vertical Overlay-->
    <div class="vertical-overlay"></div>

    <!-- ============================================================== -->
    <!-- Start right Content here -->
    <!-- ============================================================== -->
    <div class="main-content">

        <div class="page-content">
            <div class="container-fluid">

                <!-- start page title -->
                <div class="row">
                    <div class="col-12">
                        <div
                            class="page-title-box d-sm-flex align-items-center justify-content-between bg-galaxy-transparent">
                            <h4 class="mb-sm-0">Product List</h4>

                            @* <div class="page-title-right">
                                <ol class="breadcrumb m-0">
                                    <li class="breadcrumb-item"><a href="javascript: void(0);">Tables</a></li>
                                    <li class="breadcrumb-item active">Grid Js</li>
                                </ol>
                            </div> *@

                        </div>
                    </div>
                </div>
                <!-- end page title -->
                @if (storeStatusText == "Rejected")
                {
                    <div class="alert alert-danger text-center">
                        <p><strong>Your store has been rejected by admin!</strong></p>
                        <p>Please update your store information and register store again.</p>
                    </div>
                }
                else if (storeStatusText == "Pending")
                {
                    <div class="alert alert-warning text-center">
                        <p><strong>Your store is currently pending approval.</strong></p>
                        <p>Please wait while we review your request.</p>
                    </div>
                }
                else if (storeStatusText == "Approved")
                {
                    @if (!storeStatus)
                    {
                        <div class="alert alert-danger text-center">
                            <p><strong>Your store has been locked due to a policy violation!</strong></p>
                            <p>Please contact support for further assistance.</p>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-lg-12">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h4 class="card-title mb-0">Product List</h4>
                                    </div>
                                    <div class="card-body">
                                        <div class="d-flex justify-content-start mb-3">
                                            <a href="/Seller/CreateProduct?storeId=@storeId" class="btn btn-sm btn-success">
                                                <i class="ri-add-line"></i> Create Product
                                            </a>
                                        </div>
                                        @if (!string.IsNullOrEmpty(ViewBag.NoProductsMessage))
                                        {
                                            <div class="alert alert-warning text-center">
                                                <p>@ViewBag.NoProductsMessage</p>
                                            </div>
                                        }
                                        <div id="table-product"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <script>
                            document.addEventListener("DOMContentLoaded", function () {
                                var products = @Html.Raw(Json.Serialize(Model));

                                if (!products || products.length === 0) {
                                    document.getElementById("table-product").innerHTML = "<div class='alert alert-warning text-center'><p>No products available.</p></div>";
                                    return;
                                }

                                new gridjs.Grid({
                                    columns: [
                                        { name: "No.", width: "60px" },
                                        { name: "ID", hidden: true },
                                        { name: "Name", width: "200px" },
                                        { name: "Short Description", width: "250px" },
                                        { name: "Long Description", width: "300px", hidden: true },
                                        { name: "Created Date", width: "150px" },
                                        { name: "Modified Date", width: "150px", hidden: true },
                                        { name: "Manufacture Date", width: "150px", hidden: true },
                                        {
                                            name: "Is Active",
                                            width: "100px",
                                            formatter: (cell) => {
                                                let statusText = cell ? "Active" : "Disabled";
                                                let statusClass = cell ? "bg-success-subtle text-success" : "bg-danger-subtle text-danger";
                                                return gridjs.html(`<span class="badge ${statusClass}">${statusText}</span>`);
                                            }
                                        },
                                        {
                                            name: "Is On Sale",
                                            width: "100px",
                                            formatter: (cell) => {
                                                let statusText = cell ? "On Sale" : "Original Price";
                                                let statusClass = cell ? "bg-primary-subtle text-primary" : "bg-secondary-subtle text-secondary";
                                                return gridjs.html(`<span class="badge ${statusClass}">${statusText}</span>`);
                                            }
                                        },
                                        { name: "Category", width: "150px" },
                                        { name: "Store Name", width: "150px" },
                                        {
                                            name: "Image",
                                            width: "150px",
                                            formatter: (cell) => gridjs.html(`<img src="${cell}" width="50" height="50" style="object-fit:cover; border-radius:5px;"/>`)
                                        },
                                        {
                                            name: "Actions",
                                            width: "300px",
                                            formatter: (_, row) => {
                                                let productId = row.cells[1].data; // ID is now at index 1 because STT is added at index 0
                                                let isActive = row.cells[8].data;   // Adjusted index due to STT column

                                                let toggleButtonHtml = isActive
                                                    ? `<button class="btn btn-sm btn-danger me-1" onclick="toggleProductStatus('${productId}', false)"><i class="ri-eye-off-line align-bottom me-1"></i> Hide</button>`
                                                    : `<button class="btn btn-sm btn-success me-1" onclick="toggleProductStatus('${productId}', true)"><i class="ri-eye-line align-bottom me-1"></i> Show</button>`;

                                                return gridjs.html(`
                                                                                                            <div class="d-flex flex-wrap gap-1">
                                                                                                                <a class="btn btn-sm btn-primary" href="/Seller/UpdateProduct?productId=${productId}"><i class="ri-pencil-fill align-bottom me-1"></i> Edit</a>
                                                                                                                <a class="btn btn-sm btn-info" href="/Seller/ViewProductType?productId=${productId}"><i class="ri-pencil-fill align-bottom me-1"></i> View Types</a>
                                                                                                                ${toggleButtonHtml}
                                                                                                            </div>
                                                                                                        `);
                                            }
                                        }
                                    ],
                                    pagination: { enabled: true, limit: 10, summary: true },
                                    sort: true,
                                    search: true,
                                    data: products.map((p, index) => [
                                        index + 1, // STT bắt đầu từ 1
                                        p.productId, p.name, p.shortDescription, p.longDescription, formatDate(p.createdDate), formatDate(p.modifiedDate),
                                        formatDate(p.manufactureDate), p.isActive, p.isOnSale, p.cateName, p.storeName, p.imageUrl
                                    ])

                                }).render(document.getElementById("table-product"));

                            });

                            function formatDate(dateString) {
                                if (!dateString) return ""; // Xử lý trường hợp null hoặc undefined
                                let date = new Date(dateString);
                                let day = date.getDate().toString().padStart(2, '0'); // Lấy ngày, đảm bảo 2 chữ số
                                let month = (date.getMonth() + 1).toString().padStart(2, '0'); // Lấy tháng (bắt đầu từ 0 nên +1)
                                let year = date.getFullYear(); // Lấy năm
                                return `${day}/${month}/${year}`; // Ghép thành chuỗi dd/MM/yyyy
                            }


                            function toggleProductStatus(productId, isActive) {
                                let actionText = isActive ? "show" : "hide";
                                let confirmButtonColor = isActive ? "#28a745" : "#dc3545";

                                Swal.fire({
                                    title: `Are you sure?`,
                                    text: `Do you want to ${actionText} this product?`,
                                    icon: "warning",
                                    showCancelButton: true,
                                    confirmButtonColor: confirmButtonColor,
                                    cancelButtonColor: "#6c757d",
                                    confirmButtonText: `Yes, ${actionText} it!`
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        fetch(`/Seller/ToggleStatus?productId=${productId}&isActive=${isActive}`, {
                                            method: "POST",
                                            headers: { "Content-Type": "application/json" },
                                            body: JSON.stringify({ productId, isActive })
                                        })
                                            .then(response => response.json())
                                            .then(data => {
                                                if (data.success) {
                                                    Swal.fire({
                                                        title: "Success!",
                                                        text: `Product has been ${actionText} successfully.`,
                                                        icon: "success",
                                                        timer: 1500,
                                                        showConfirmButton: false
                                                    }).then(() => location.reload());
                                                } else {
                                                    Swal.fire("Error!", "Failed to update product status.", "error");
                                                }
                                            })
                                            .catch(error => {
                                                console.error("Error updating product status:", error);
                                                Swal.fire("Error!", "An unexpected error occurred.", "error");
                                            });
                                    }
                                });
                            }
                        </script>
                    }
                }
                <!-- end row -->

            </div>
            <!-- container-fluid -->
        </div>
        <!-- End Page-content -->
        @await Html.PartialAsync("_Footer_Admin_Seller")
    </div>
    <!-- end main content-->
    </div>
    <!-- END layout-wrapper -->
    <!--start back-to-top-->
    <button onclick="topFunction()" class="btn btn-danger btn-icon" id="back-to-top">
        <i class="ri-arrow-up-line"></i>
    </button>
    <!--end back-to-top-->
    <!--preloader-->
    <div id="preloader">
        <div id="status">
            <div class="spinner-border text-primary avatar-sm" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>




    <!-- JAVASCRIPT -->
    <script src="~/assetsAdmin/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/assetsAdmin/libs/simplebar/simplebar.min.js"></script>
    <script src="~/assetsAdmin/libs/node-waves/waves.min.js"></script>
    <script src="~/assetsAdmin/libs/feather-icons/feather.min.js"></script>
    <script src="~/assetsAdmin/js/pages/plugins/lord-icon-2.1.0.js"></script>
    <script src="~/assetsAdmin/js/plugins.js"></script>

    <!-- prismjs plugin -->
    <script src="~/assetsAdmin/libs/prismjs/prism.js"></script>

    <!-- gridjs js -->
    <script src="~/assetsAdmin/libs/gridjs/gridjs.umd.js"></script>
    <!-- gridjs init -->
    <script src="~/assetsAdmin/js/pages/gridjs.init.js"></script>

    <!-- App js -->
    <script src="~/assetsAdmin/js/app.js"></script>

</body>


<!-- Mirrored from EasyFood.com/velzon/html/master/forms-layouts.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 26 Feb 2025 12:22:12 GMT -->

</html>