<!DOCTYPE html>
<html lang="en">

<head>
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/assetsAdmin/images/favicon.svg">
    @Html.Raw("<link href='https://cdn.jsdelivr.net/npm/@flaticon/flaticon-uicons/css/all/all.css' rel='stylesheet'>")
    <link href="~/assets/simple-notify/simple-notify.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        .chat-toast-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: #2f3542;
            color: white;
            padding: 14px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
            z-index: 9999;
            transition: transform 0.3s ease;
        }

        .chat-toast-notification:hover {
            transform: scale(1.05);
            background-color: #1e272e;
        }
    </style>
</head>

<body>
    @RenderBody()
    <script src="~/assets/cute-alert/cute-alert.js"></script>
    <script src="~/assets/sweetalert2/sweetalert2.js"></script>
    <link rel="stylesheet" href="~/assets/cute-alert/style.css" />
    <link href="~/assets/sweetalert2/default.css" rel="stylesheet" />
    <script src="~/assets/simple-notify/simple-notify.min.js"></script>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    @* <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script> *@
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/simple-notify@latest/dist/simple-notify.min.js"></script>
    <script src="~/js/cart.js"></script>
    @* <script src="~/js/PriceAndStock.js"></script> *@
    <script>
        $(document).ready(function () {
            // Lấy số dư (balance) nếu cần
            function getBalance() {
                $.ajax({
                    url: '/Home/GetBalance',
                    type: 'POST',
                    dataType: 'json',
                    success: function (response) {
                        if (response.msg) {
                            $("#balance-display").text(response.msg);
                        } else {
                            console.error(response.msg);
                        }
                    },
                    error: function () {
                        console.error("Lỗi khi lấy số dư.");
                    }
                });
            }

            /*  function getStock() {
  
                  var variantId = $("#selectedVariantId").val();
  
                  // Nếu chưa có variant được chọn → tự động chọn option đầu tiên
                  if (!variantId) {
                      var firstOption = $("#selectedVariantId option:first").val();
                      $("#selectedVariantId").val(firstOption);
                      variantId = firstOption;
                  }
  
                  $.ajax({
                      url: "/Home/GetVariantPrice",
                      type: "GET",
                      data: { variantId: variantId },
                      dataType: "json",
                      success: function (data) {
                          if (data && data.stock != null && !isNaN(data.stock)) {
                              $("#stock-display").text(data.stock);
  
                              if (data.price != null && !isNaN(data.price)) {
                                  var formattedPrice = data.price.toLocaleString("vi-VN", {
                                      style: "currency",
                                      currency: "₫"
                                  });
                                  $("#price-display").text(formattedPrice);
                              } else {
                                  console.warn("Giá không hợp lệ:", data);
                                  $("#price-display").text("0 đ");
                              }
                          } else {
                              console.warn("Dữ liệu stock không hợp lệ:", data);
                              $("#stock-display").text("0");
                              $("#price-display").text("0 đ");
                          }
                      },
                      error: function () {
                          console.error("Lỗi khi lấy thông tin từ server.");
                          $("#stock-display").text("0");
                          $("#price-display").text("0 đ");
                      }
                  });
              }  */


            // Gọi lần đầu khi trang load
            getBalance();
            /*  getStock(); */

            // Cập nhật lại stock mỗi 10 giây
            setInterval(function () {
                getBalance();
                /*  getStock(); */
            }, 1000);

            // Nếu muốn khi user chọn variant khác thì gọi lại getStock ngay lập tức
            /*      $("#selectedVariantId").on("change", function () {
                     getStock();
                 }); 
                 */
        });
    </script>



    <script>
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get('userId');
        const token = urlParams.get('token');

        if (userId && token) {
            $.ajax({
                url: '/Home/ConfirmEmail',
                type: 'GET',
                data: {
                    userId: userId,
                    token: token
                },
                success: function (data) {
                    Swal.fire({
                        icon: data.success ? 'success' : 'error',
                        title: data.success ? 'Thành công' : 'Thất bại',
                        text: data.message
                    }).then(() => {
                        // Xóa tham số userId và token khỏi URL mà không reload trang
                        const cleanUrl = window.location.origin + window.location.pathname;
                        window.history.replaceState({}, document.title, cleanUrl);
                    });
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi',
                        text: 'Đã xảy ra lỗi trong quá trình xác nhận.'
                    }).then(() => {
                        const cleanUrl = window.location.origin + window.location.pathname;
                        window.history.replaceState({}, document.title, cleanUrl);
                    });
                }
            });
        } 
    </script>
    <script>
           const connectionRecipe = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connectionRecipe.on("ReceiveExperRecipe", function () {
            console.log("📡 Received update signal");

            $.get('/Home/GetAvailableIngredients', function (data) {
                availableIngredients = data;
                filteredIngredients = data.slice();
                renderAvailableIngredients();
            }).fail(function () {
                console.error("❌ Failed to fetch available ingredients");
            });

            setGenerateBtnState();
        });
        connectionRecipe.on("ReceiveDeleteExperRecipe", function () {
          const $historyList = $('#historyList');
        const $clearBtn = $('#btn-clear-history');

        // Show loading
        $historyList.html(`
            <div class="text-center my-4">
                <div class="spinner-border text-secondary" role="status"></div>
                <p class="mt-2">Loading view history...</p>
            </div>
        `);

        $.get('/Home/LoadRecipeViewHistory', function (html) {
            $historyList.html(html);

            // Check if any history item exists
            if ($historyList.find('.history-item').length > 0) {
                $clearBtn.show();
            } else {
                $clearBtn.hide();
            }
        }).fail(function (xhr, status, error) {
            console.error("❌ Load failed:", status, error);

            if (xhr.status === 401) {
                $historyList.html('<div class="alert alert-warning text-center mt-3">Bạn cần đăng nhập để xem lịch sử.</div>');
            } else {
                $historyList.html('<div class="alert alert-danger text-center mt-3">Đã xảy ra lỗi khi tải lịch sử.</div>');
            }

            $clearBtn.hide();
        });

        });

        connectionRecipe.start()
            .then(() => console.log("✅ SignalR connected"))
            .catch(err => console.error("❌ SignalR error:", err));

        $(document).ready(function () {
            $('#history-tab').on('shown.bs.tab', function () {
                const $historyList = $('#historyList');
                const $clearBtn = $('#btn-clear-history');

                // Show loading
                $historyList.html(`
                    <div class="text-center my-4">
                        <div class="spinner-border text-secondary" role="status"></div>
                        <p class="mt-2">Loading view history...</p>
                    </div>
                `);

                 $.get('/Home/LoadRecipeViewHistory', function (html) {
            $historyList.html(html);

            // Check if any history item exists
            if ($historyList.find('.history-item').length > 0) {
                $clearBtn.show();
            } else {
                $clearBtn.hide();
            }
        }).fail(function (xhr, status, error) {
            console.error("❌ Load failed:", status, error);

            if (xhr.status === 401) {
                $historyList.html('<div class="alert alert-warning text-center mt-3">Bạn cần đăng nhập để xem lịch sử.</div>');
            } else {
                $historyList.html('<div class="alert alert-danger text-center mt-3">Đã xảy ra lỗi khi tải lịch sử.</div>');
            }

            $clearBtn.hide();
        });

            });

            // Xử lý khi bấm nút "Delete history"
            $('#btn-clear-history').click(function () {
                Swal.fire({
                    icon: 'warning',
                    title: 'Delete all view history?',
                    text: 'This action cannot be undone!',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete all',
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '/Home/DeleteAllViewHistory',
                            type: 'POST',
                            success: function () {
                               $('#historyList').html(`
            <div class="empty-history text-center">
                <i class="fas fa-clock fa-2x mb-2 text-muted"></i>
                <h5>No view history yet</h5>
                <p class="text-muted">Recipes you've viewed will appear here</p>
            </div>
        `);

                                $('#btn-clear-history').hide();
                                Swal.fire('Deleted!', 'Your view history has been deleted.', 'success');
                            },
                            error: function () {
                                Swal.fire('Error', 'Failed to delete history.', 'error');
                            }
                        });
                    }
                });
            });
        });

    </script>
    <script>
        function goToChat(userId) {
            localStorage.setItem('startChatUserId', userId);
            console.log('Đã lưu userId vào localStorage:', userId);
            setTimeout(function () {
                window.location.href = '/users/chatlist';
            }, 100);
        }
    </script>
    <script>
        const currentUserId = '@User.FindFirst("sub")?.Value';
        let soundAllowed = false;

        // Đánh dấu là người dùng đã từng tương tác
        document.addEventListener('click', () => soundAllowed = true);

        // Kết nối SignalR
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.start().then(() => {
            console.log("✅ SignalR connected.");
        }).catch(err => console.error(err.toString()));

        connection.on("ReceiveMessage", function (message) {
            console.log("📩 New message received:", message);

            if (!window.location.pathname.includes("/Chat")) {
                showToastNotification(message.senderName + " vừa gửi: " + message.msg, message.from_id);

                // Nếu tab đang được focus và người dùng đã từng click => phát âm thanh
                if (!document.hidden && soundAllowed) {
                    const audio = new Audio('/audio/notify.mp3');
                    audio.play().catch(e => console.warn("🔇 Notification sound blocked:", e));
                }

                // Nếu tab bị ẩn, dùng Notification API
                if (document.hidden && Notification.permission === "granted") {
                    new Notification("💬 Tin nhắn mới từ " + message.senderName, {
                        body: message.msg,
                        icon: "/assetsAdmin/images/logo.png"
                    });
                }
            }
        });

        // Yêu cầu quyền gửi Notification nếu chưa có
        if (Notification.permission !== "granted" && Notification.permission !== "denied") {
            Notification.requestPermission();
        }

        function showToastNotification(text, userId) {
            const toast = document.createElement("div");
            toast.className = "chat-toast-notification";
            toast.textContent = text;
            toast.addEventListener("click", () => {
                goToChat(userId);
            });

            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 7000);
        }

        function goToChat(userId) {
            localStorage.setItem('startChatUserId', userId);

            fetch('/Home/GetCurrentUserRole')
                .then(response => {
                    if (!response.ok) throw new Error("Không thể lấy vai trò");
                    return response.json();
                })
                .then(data => {
                    let redirectUrl = '/users/chatlist';
                    if (data.role === "Admin") {
                        redirectUrl = '/Admin/chat';
                    } else if (data.role === "Seller") {
                        redirectUrl = '/Seller/chat';
                    }

                    window.location.href = redirectUrl;
                })
                .catch(error => {
                    console.error("Lỗi khi lấy vai trò người dùng:", error);
                    window.location.href = '/users/chatlist';
                });
        }

    </script>
    <script>
        function goBack() {
            if (document.referrer) {
                window.history.back();
            } else {
                window.location.href = '/'; // Fallback nếu không có referrer
            }
        }
    </script>
    <script>
        console.log("📍 Script loaded: Initializing followHub SignalR...");

        $(document).ready(function () {
            console.log("📍 DOM ready: Starting followHub SignalR connection...");

            try {
                if (!window.followConnection) {
                    window.followConnection = new signalR.HubConnectionBuilder()
                        .withUrl("/followHub")
                        .configureLogging(signalR.LogLevel.Information)
                        .build();

                    window.followConnection.onclose(() => {
                        console.error("❌ followHub connection closed unexpectedly");
                    });

                    window.followConnection.start()
                        .then(() => {
                            console.log("✅ followHub SignalR connected successfully");
                        })
                        .catch(err => {
                            console.error("❌ followHub connection failed:", err);
                        });

                    window.followConnection.on("ReceiveFollowUpdate", function (storeId, isFollowing) {
                        try {
                            console.log("📡 SignalR event received:");
                            console.log("   ➤ Store ID:", storeId);
                            console.log("   ➤ Follow status:", isFollowing ? "Followed" : "Unfollowed");

                            // Cập nhật nút follow/unfollow trên mọi trang
                            const followBtn = $(`#followBtn[data-store-id="${storeId}"], .unfollow-btn[data-store-id="${storeId}"]`);
                            if (followBtn.length) {
                                if (isFollowing) {
                                    followBtn.html('<i class="fas fa-heart me-1 text-danger"></i> FOLLOWED');
                                } else {
                                    followBtn.html('<i class="fas fa-heart me-1"></i> FOLLOW');
                                }
                            } else {
                                console.warn(`⚠️ No follow button found for store ID: ${storeId}`);
                            }

                            // Xử lý cho trang ManagementFollowedStores
                            if (window.location.pathname === "/Home/ManagementFollowedStores") {
                                if (isFollowing) {
                                    console.log("📥 Sending AJAX GET to load store card...");
                                    $.get("/Users/RenderStoreCard?storeId=" + storeId, function (html) {
                                        console.log("✅ Card HTML received successfully");
                                        if ($('#store-container').length) {
                                            $('#store-container').prepend(html);
                                        } else {
                                            console.warn("⚠️ #store-container not found on this page. Reloading...");
                                            window.location.reload();
                                        }
                                    }).fail(function (xhr) {
                                        console.error("❌ Failed to load card from server");
                                        console.error("   ➤ Status:", xhr.status);
                                        console.error("   ➤ Response:", xhr.responseText);
                                        new Notify({
                                            status: 'error',
                                            title: 'Error',
                                            text: xhr.responseText || 'Failed to load store card.',
                                            effect: 'fade',
                                            speed: 300,
                                            showIcon: true,
                                            autoclose: true,
                                            autotimeout: 3000,
                                            position: 'right top'
                                        });
                                    });
                                } else {
                                    console.log("🗑 Removing card with store ID:", storeId);
                                    $(`.store-item[data-id="${storeId}"]`).remove();
                                }
                            }

                            // Hiển thị thông báo
                            new Notify({
                                status: 'success',
                                title: 'Follow Update',
                                text: isFollowing ? 'You followed a store.' : 'You unfollowed a store.',
                                effect: 'fade',
                                speed: 300,
                                showIcon: true,
                                autoclose: true,
                                autotimeout: 3000,
                                position: 'right top'
                            });
                        } catch (e) {
                            console.error("❌ Error in ReceiveFollowUpdate:", e);
                        }
                    });
                } else {
                    console.warn("⚠️ followHub SignalR already initialized.");
                }
            } catch (e) {
                console.error("❌ Exception in followHub script:", e);
            }
        });
    </script>

    @RenderSection("Scripts", required: false)


</body>

</html>
