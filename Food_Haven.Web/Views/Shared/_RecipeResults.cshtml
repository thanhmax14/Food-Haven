@model List<Food_Haven.Web.Models.Recipegenare>
@using System.Text.Json
@{
    var resultArrayJson = JsonSerializer.Serialize(Model);
}
@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning">
        <i class="fas fa-exclamation-triangle me-2"></i>
        No recipes found with selected ingredients.
    </div>
}
else
{
    <script>
        window.recipeResultArray = @Html.Raw(resultArrayJson);
    </script>
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-utensils me-2"></i>
                Found @Model.Count recipe(s)
            </h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th width="5%">#</th>
                            <th width="40%">Recipe Name</th>
                            <th width="30%">Ingredients Preview</th>
                            <th width="15%">Steps</th>
                            <th width="10%">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var i = 0; i < Model.Count; i++)
                        {
                            var r = Model[i];
                            var ingredientsPreview = "";
                            var stepsCount = 0;
                            try
                            {
                                var ingredients = JsonSerializer.Deserialize<List<string>>(r.ingredients);
                                ingredientsPreview = string.Join(", ", ingredients.Take(3));
                                if (ingredients.Count > 3)
                                    ingredientsPreview += $", ... (+{ingredients.Count - 3} more)";
                            }
                            catch
                            {
                                ingredientsPreview = r.ingredients.Length > 50 ? r.ingredients.Substring(0, 50) + "..." : r.ingredients;
                            }
                            try
                            {
                                var directions = JsonSerializer.Deserialize<List<string>>(r.directions);
                                stepsCount = directions.Count;
                            }
                            catch
                            {
                                stepsCount = r.directions.Split('.').Length;
                            }
                            <tr>
                                <td>@(i + 1)</td>
                                <td>
                                    <strong>@r.title</strong>
                                    @if (!string.IsNullOrEmpty(r.source))
                                    {
                                        <br>
                                        <small class="text-muted">Source: <a href='https://@r.link' target="_blank">View</a></small>
                                    }
                                </td>
                                <td>
                                    <small class="text-muted">@ingredientsPreview</small>
                                </td>
                                <td>
                                    <span class="badge bg-info">@stepsCount steps</span>
                                </td>
                                <td>
                                    <button class="btn btn-primary btn-sm btn-view-modal" type="button" data-idx="@i">
                                        <i class="fas fa-eye me-1"></i>View
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
