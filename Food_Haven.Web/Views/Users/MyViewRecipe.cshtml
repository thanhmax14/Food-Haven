@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model Repository.ViewModels.MyViewRecipePageViewModel


<!DOCTYPE html>
<html class="no-js" lang="en">

<head>
    <meta charset="utf-8" />
    <title>Nest - Multipurpose eCommerce HTML Template</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="description" content="" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta property="og:title" content="" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="" />
    <!-- Favicon -->
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="~/assets/imgs/theme/favicon.svg" />
    <!-- Template CSS -->
    <link rel="stylesheet" href="~/assets/css/main.css?v=6.0" />

    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="chrome-extension://mooikfkahbdckldjjndioackbalphokd/~/assets/prompt.js"></script>
    @Html.Raw(" <link href='https://cdn.jsdelivr.net/npm/@flaticon/flaticon-uicons/css/all/all.css' rel='stylesheet'>")

    <link rel="stylesheet" href="~/assets/js/gridjs/theme/mermaid.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Icons Css -->
<link href="~/assetsAdmin/css/icons.min.css" rel="stylesheet" type="text/css" />
<style>
    .multi-select-container {
        border: 1px solid #ccc;
        display: flex;
        gap: 10px;
        font-family: Arial, sans-serif;
    }
    .multi-select-column {
        flex: 1;
        display: flex;
        flex-direction: column;
    }
    .multi-select-column .header {
        font-weight: bold;
        margin-bottom: 5px;
    }
    .search-input {
        width: 100%;
        box-sizing: border-box;
        border: 1px solid #ced4da !important;
        border-radius: 6px;
        padding: 8px 12px;
        background-color: #fff;
        outline: none;
        box-shadow: none;
        margin-bottom: 10px;
    }
    .items-list {
        border: 1px solid #ccc;
        height: 250px;
        overflow-y: auto;
    }
    .item {
        padding: 5px;
        cursor: pointer;
        border: 1px solid transparent;
    }
    .item:hover {
        background-color: #eee;
    }
    .item.selected {
        background-color: #2f00ff;
        color: white;
        border-color: #007bff;
    }

    .note-text {
    max-width: 50ch;         /* Giới hạn chiều ngang theo 40 ký tự */
    word-wrap: break-word;   /* Tự động xuống hàng khi dài */
    white-space: normal;     /* Cho phép xuống hàng */
}
</style>
</head>

<body>
    @await Html.PartialAsync("_Header")
    <!--End header-->
    <main class="main">
        <div class="page-header mt-30 mb-50">
            <div class="container">
                <div class="archive-header">
                    <div class="row align-items-center">
                        <div class="col-xl-3">
                            <h1 class="mb-15">Recips</h1>
                            @* <div class="breadcrumb">
                                <a href="/" rel="nofollow"><i class="fi-rs-home mr-5"></i>Home</a>
                                <span></span> Blog & News
                            </div> *@
                        </div>
                        <div class="col-xl-9 text-end d-none d-xl-block">
                            <ul class="tags-list">
                                <li class="hover-up">
                                    <a href="/home/index"><i class="fi-rs-cross mr-10"></i>Product</a>
                                </li>
                                <li class="hover-up active">
                                    <a href=""><i class="fi-rs-cross mr-10"></i>Recips</a>
                                </li>
                                <li class="hover-up">
                                    <a href="/Home/GetAllStore"><i class="fi-rs-cross mr-10"></i>Store</a>
                                </li>
                                <li class="hover-up">
                                    <a href="/Home/GetAllCategory"><i class="fi-rs-cross mr-10"></i>Category</a>
                                </li>
                                <li class="hover-up mr-0">
                                    <a href="/home/FindRecipes"><i class="fi-rs-cross mr-10"></i>Find Recipe</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="page-content mb-50">
            <div class="container">
                <div class="row">
                    <div class="col-lg-9">
                        <div class="shop-product-fillter mb-50 pr-30">
                            <div class="totall-product">
                                <h2>
                                    <img class="w-36px mr-10" src="assets/imgs/theme/icons/category-1.svg" alt="" />
                                    View My Recipe
                                </h2>
                            </div>
                            @* <div class="sort-by-product-area">
                                <div class="sort-by-cover mr-10">
                                    <div class="sort-by-product-wrap">
                                        <div class="sort-by">
                                            <span><i class="fi-rs-apps"></i>Show:</span>
                                        </div>
                                        <div class="sort-by-dropdown-wrap">
                                            <span> 50 <i class="fi-rs-angle-small-down"></i></span>
                                        </div>
                                    </div>
                                    <div class="sort-by-dropdown">
                                        <ul>
                                            <li><a class="active" href="#">50</a></li>
                                            <li><a href="#">100</a></li>
                                            <li><a href="#">150</a></li>
                                            <li><a href="#">200</a></li>
                                            <li><a href="#">All</a></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="sort-by-cover">
                                    <div class="sort-by-product-wrap">
                                        <div class="sort-by">
                                            <span><i class="fi-rs-apps-sort"></i>Sort:</span>
                                        </div>
                                        <div class="sort-by-dropdown-wrap">
                                            <span>Featured <i class="fi-rs-angle-small-down"></i></span>
                                        </div>
                                    </div>
                                    <div class="sort-by-dropdown">
                                        <ul>
                                            <li><a class="active" href="#">Featured</a></li>
                                            <li><a href="#">Newest</a></li>
                                            <li><a href="#">Most comments</a></li>
                                            <li><a href="#">Release Date</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div> *@
                        </div>
                        <div class="loop-grid loop-list pr-30 mb-50">
                            @foreach (var item in Model.Recipes)
                            {
                                <article class="wow fadeIn animated hover-up mb-30 animated">
                                    <div class="post-thumb" style="background-image: url('@item.ThumbnailImage');">
                                        @* <div class="entry-meta">
                                            <a class="entry-meta meta-2" href="#"><i class="fi-rs-play-alt"></i></a>
                                        </div> *@
                                    </div>
                                    <!-- Nút Edit phía trên bên phải -->
                          <a asp-action="EditRecipe"
   asp-controller="Users"
   asp-route-id="@item.ID"
   class="btn btn-sm btn-primary"
   style="position: absolute; top: 10px; right: 10px; z-index: 10;">
    Edit
</a>


                                 <button class="btn btn-sm @(item.IsActive ? "btn-danger" : "btn-success")"
        data-bs-toggle="modal"
        data-bs-target="#toggleActiveModal-@item.ID"
        style="position: absolute; top: 10px; right: 90px; z-index: 10;"
        id="toggle-btn-@item.ID">
    @(item.IsActive ? "Hide" : "Show")
</button>


                                    <div class="entry-content-2 pl-50">
                                        <h3 class="post-title mb-20">
                                            <a href="blog-post-right.html">@item.Title</a>
                                        </h3>
                                        <p class="post-exerpt mb-40">@item.ShortDescriptions</p>
                                        <div class="entry-meta meta-1 font-xs color-grey mt-10 pb-10">

                                      <div class="d-flex flex-wrap gap-2 mb-2">
    <!-- Dòng 1 -->
    <!-- Dòng 1 -->
<div class="d-flex flex-row gap-2 w-100">
    <span class="post-on has-dot">@item.TypeOfDishName</span>
    <span class="post-on has-dot">@item.DifficultyLevel</span>
    <span class="post-on has-dot">@item.CreatedDate.ToString("dd/MM/yyyy")</span>
</div>

<!-- Dòng 2 -->
<div class="d-flex flex-row gap-2 w-100">
    <span class="hit-count has-dot">126k Views</span>
    <span class="hit-count has-dot 
        @(item.status?.ToLower() == "accept" ? "text-success" :
          item.status?.ToLower() == "pending" ? "text-warning" :
          item.status?.ToLower() == "reject" ? "text-danger" : "")">
        @item.status
    </span>
</div>

<!-- Dòng 3: Chỉ hiện nếu bị từ chối -->
@if (item.status?.ToLower() == "reject" && !string.IsNullOrWhiteSpace(item.RejectNote))
{
    <div class="text-danger ms-2 note-text">
        <strong>Note:</strong> @item.RejectNote
    </div>
}


</div>

                                            <a asp-action="RecipeDetail" asp-controller="Users" asp-route-id="@item.ID"
                                                class="text-brand font-heading font-weight-bold">Read more <i
                                                    class="fi-rs-arrow-right"></i></a>
                                        </div>

                                    </div>
                                </article>
                             <div class="modal fade" id="editRecipeModal-@item.ID" tabindex="-1" aria-labelledby="editRecipeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen modal-dialog-scrollable">
        <div class="modal-content">
<form asp-action="EditRecipe" asp-controller="Users" method="post" enctype="multipart/form-data"
      class="edit-recipe-form" data-recipe-id="@item.ID"
      data-selected-tags='@Html.Raw(Json.Serialize(item.SelectedIngredientTags ?? new List<Guid>()))'>



<input type="hidden" name="ID" value="@item.ID" />
                <div class="card-body" style="max-height: 80vh; overflow-y: auto;">
                    <div class="row">
                        <!-- Title -->
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Title</label>
                            <input class="form-control" name="Title" value="@item.Title" required />
                        </div>

                        <!-- Servings -->
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Servings</label>
                            <input class="form-control" name="Servings" value="@item.Servings" required />
                        </div>

                        <!-- Short Description -->
                        <div class="col-md-12 mb-3">
                            <label class="form-label">Short Description</label>
                            <textarea class="form-control" name="ShortDescriptions" rows="3">@item.ShortDescriptions</textarea>
                        </div>

                        <!-- Category -->
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Category</label>
                            <select class="form-select" name="CateID" required>
                                <option value="">Choose...</option>
                                @foreach (var cate in Model.Categories)
                                {
                                    <option value="@cate.ID" selected="@(cate.ID == item.CateID ? "selected" : null)">
                                        @cate.Name
                                    </option>
                                }
                            </select>
                        </div>

                        <!-- Type of Dish -->
                        <div class="col-md-3 mb-3">
                            <label class="form-label">Type of Dish</label>
                            <select class="form-select" name="TypeOfDishID" required>
                                <option value="">Choose...</option>
                                @foreach (var dish in Model.TypeOfDishes)
                                {
                                    <option value="@dish.ID" selected="@(dish.ID == item.TypeOfDishID ? "selected" : null)">
                                        @dish.Name
                                    </option>
                                }
                            </select>
                        </div>

                        <!-- Difficulty -->
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Difficulty Level</label>
                            <select class="form-select" name="DifficultyLevel">
                                <option value="Easy" selected="@(item.DifficultyLevel == "Easy")">Easy</option>
                                <option value="Medium" selected="@(item.DifficultyLevel == "Medium")">Medium</option>
                                <option value="Hard" selected="@(item.DifficultyLevel == "Hard")">Hard</option>
                            </select>
                        </div>

                        <!-- IsActive -->
                        <div class="col-md-6 mb-3">
                                <input type="hidden" name="IsActive" value="true" />
    <div class="form-check">
        <input class="form-check-input" type="checkbox" name="IsActive" value="true" @(item.IsActive ? "checked" : "") />
        <label class="form-check-label">Is Active</label>
    </div>
                        </div>


                        <div class="row">
                        <!-- Cột phải: Ingredient Tag -->


                    <div class="col-md-6 mb-3 h-100 d-flex flex-column">
    <input class="search-input" type="text" placeholder="Search..." title="Search..." id="searchAll-@item.ID">
    <label for="IngredientTags-@item.ID" class="form-label">Ingredient Tag</label>
    <select id="IngredientTags-@item.ID" name="SelectedIngredientTags[]" class="form-select" multiple size="5" style="display: none;">
        @foreach (var item in Model.IngredientTags)
        {
            <option value="@item.ID">@item.Name</option>
        }
    </select>
    <div class="multi-select-container">
        <div class="multi-select-column">
            <div class="header">Available</div>
            <div class="items-list" id="availableList-@item.ID"></div>
        </div>
        <div class="multi-select-column">
            <div class="header">Selected</div>
            <div class="items-list" id="selectedList-@item.ID"></div>
        </div>
    </div>
</div>
@{
    int prepValue = 0;
    string prepUnit = "minutes";
    string prepQuick = "";

    var prepMatch = System.Text.RegularExpressions.Regex.Match(item.PreparationTime ?? "", @"(\d+)\s*(minutes|minute|hours|hour|days|day)?", System.Text.RegularExpressions.RegexOptions.IgnoreCase);
    if (prepMatch.Success)
    {
        prepValue = int.Parse(prepMatch.Groups[1].Value);
        var u = prepMatch.Groups[2].Success ? prepMatch.Groups[2].Value.ToLower() : "";
        if (u.Contains("hour")) { prepUnit = "hours"; prepQuick = (prepValue * 60).ToString(); }
        else if (u.Contains("day")) { prepUnit = "days"; prepQuick = (prepValue * 1440).ToString(); }
        else { prepQuick = prepValue.ToString(); }
    }

    var quickOptions = new Dictionary<string, string>
    {
        { "5", "5 min" }, { "10", "10 min" }, { "15", "15 min" }, { "20", "20 min" }, { "30", "30 min" },
        { "45", "45 min" }, { "60", "1 hour" }, { "120", "2 hours" }, { "180", "3 hours" }
    };
}


                        <!-- Cột trái: 3 time input -->
                        <div class="col-md-6">
                            <!-- Preparation Time -->
                            <div class="mb-3">
                                <label class="form-label">Preparation Time</label>
                              <div class="d-flex gap-2 align-items-center">
    <!-- Input number -->
    <input type="number" class="form-control" min="0" placeholder="Enter time"
           name="PreparationValue" style="width: 120px;" value="@prepValue" />

    <!-- Select Unit -->
    <select class="form-select" name="PreparationUnit" style="width: 120px;">
        @foreach (var unit in new[] { "minutes", "hours", "days" })
        {
            var selected = prepUnit == unit ? "selected=\"selected\"" : "";
            @:<option value="@unit" @Html.Raw(selected)>@char.ToUpper(unit[0])@unit.Substring(1)</option>
        }
    </select>

    <!-- Quick Select -->
    <span class="text-muted">or</span>
    <select class="form-select" name="PreparationQuick" style="width: 150px;">
        <option value="">Quick select</option>
        @foreach (var opt in quickOptions)
        {
            var selected = prepQuick == opt.Key ? "selected=\"selected\"" : "";
            @:<option value="@opt.Key" @Html.Raw(selected)>@opt.Value</option>
        }
    </select>
</div>
                            </div>
@{
    int cookValue = 0;
    string cookUnit = "minutes";
    string cookQuick = "";

    var cookMatch = System.Text.RegularExpressions.Regex.Match(item.CookTime ?? "", @"(\d+)\s*(minutes|minute|hours|hour|days|day)?", System.Text.RegularExpressions.RegexOptions.IgnoreCase);
    if (cookMatch.Success)
    {
        cookValue = int.Parse(cookMatch.Groups[1].Value);
        var u = cookMatch.Groups[2].Success ? cookMatch.Groups[2].Value.ToLower() : "";

        if (u.Contains("hour")) { cookUnit = "hours"; cookQuick = (cookValue * 60).ToString(); }
        else if (u.Contains("day")) { cookUnit = "days"; cookQuick = (cookValue * 1440).ToString(); }
        else { cookQuick = cookValue.ToString(); }
    }

    var quickOptions1 = new Dictionary<string, string>
    {
        { "5", "5 min" }, { "10", "10 min" }, { "15", "15 min" }, { "20", "20 min" }, { "30", "30 min" },
        { "45", "45 min" }, { "60", "1 hour" }, { "120", "2 hours" }, { "180", "3 hours" }, { "240", "4 hours" }
    };
}

                            <!-- Cooking Time -->
                            <div class="mb-3">
                                <label class="form-label">Cooking Time</label>
                              <div class="d-flex gap-2 align-items-center">
    <input type="number" class="form-control" min="0" placeholder="Enter time"
           name="CookingValue" style="width: 120px;" value="@cookValue" />

    <select class="form-select" name="CookingUnit" style="width: 120px;">
        @foreach (var unit in new[] { "minutes", "hours", "days" })
        {
            var selected = cookUnit == unit ? "selected=\"selected\"" : "";
            @:<option value="@unit" @Html.Raw(selected)>@char.ToUpper(unit[0])@unit.Substring(1)</option>
        }
    </select>

    <span class="text-muted">or</span>

    <select class="form-select" name="CookingQuick" style="width: 150px;">
        <option value="">Quick select</option>
        @foreach (var opt in quickOptions)
        {
            var selected = cookQuick == opt.Key ? "selected=\"selected\"" : "";
            @:<option value="@opt.Key" @Html.Raw(selected)>@opt.Value</option>
        }
    </select>
</div>




                                <!-- Total Time -->
                                <div class="mb-3">
                                    <label class="form-label">Total Time</label>
                                    <div class="form-control bg-light" id="displayTotalTime" style="height: auto;">
                                        0 minute
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><!-- end inner row -->
                    <input type="hidden" id="hiddenPrepTime" name="PreparationTime" />
<input type="hidden" id="hiddenCookTime" name="CookTime" />
<input type="hidden" id="hiddenTotalTime" name="TotalTime" />

                        <!-- Ingredient Editor -->
                        <div class="card mt-3">
                            <div class="card-header"><h5>Ingredient</h5></div>
                            <div class="card-body">
<div id="editor-Ingredient-@item.ID" class="snow-editor">@Html.Raw(item.Ingredient)</div>
                            </div>
                        </div>

                        <!-- Cooking Step Editor -->
                        <div class="card mt-3">
                            <div class="card-header"><h5>Cooking Step</h5></div>
                            <div class="card-body">
<div id="editor-CookingStep-@item.ID" class="snow-editor">@Html.Raw(item.CookingStep)</div>
                            </div>
                        </div>

                        <!-- Thumbnail -->
                     
                    </div>
   <div class="col-md-12 mt-3">
                            <label class="form-label">Thumbnail Image</label><br />
                            @if (!string.IsNullOrEmpty(item.ThumbnailImage))
                            {
                                <img src="@item.ThumbnailImage" alt="Thumbnail" style="max-height: 100px; margin-bottom: 10px;" /><br />
                            }
                            <input type="file" class="form-control" name="ThumbnailImage" />
                        </div>
                    <!-- Hidden fields -->
                    <input type="hidden" id="IngredientHidden-@item.ID" name="Ingredient" />
                        <input type="hidden" id="CookingStepHidden-@item.ID" name="CookingStep" />

                    <!-- Submit Buttons -->
                    <div class="mt-3">
                        <button type="submit" class="btn btn-sm btn-success">Update Recipe</button>
                        <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

                                <!-- Modal Toggle Show/Hide -->
                              <div class="modal fade" id="toggleActiveModal-@item.ID" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered"> <!-- 🔁 Đổi từ modal-sm thành modal-lg -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger" id="modal-title-@item.ID">
                    Confirm @(item.IsActive ? "Hide" : "Show")
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body">
                Are you sure you want to <strong id="modal-status-text-@item.ID">
                    @(item.IsActive ? "hide" : "show")
                </strong> the recipe:
                <div class="text-dark">"<strong>@item.Title</strong>"?</div>
            </div>

            <div class="modal-footer">
                <button class="btn @(item.IsActive ? "btn-danger" : "btn-success")"
                        onclick="toggleRecipeActive('@item.ID', @(item.IsActive.ToString().ToLower()))"
                        id="confirm-btn-@item.ID">
                    Confirm
                </button>
                <button type="button" class="btn btn-secondary"
                        data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>



                            }


                        </div>
         <div class="pagination-area mt-15 mb-sm-5 mb-lg-0">
    @Html.PagedListPager(
        Model.Recipes,
        page => Url.Action("MyViewRecipe", new { page }),
        new PagedListRenderOptions
        {
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
            UlElementClasses = new[] { "pagination", "justify-content-start" },
            ActiveLiElementClass = "active",
            LinkToPreviousPageFormat = "<i class='fi-rs-arrow-small-left'></i>",
            LinkToNextPageFormat = "<i class='fi-rs-arrow-small-right'></i>"
        })
</div>




                    </div>
                    <div class="col-lg-3 primary-sidebar sticky-sidebar">
                        <div class="widget-area">
                            @* <div class="sidebar-widget-2 widget_search mb-50">
                                <div class="search-form">
                                    <form action="#">
                                        <input type="text" placeholder="Search…" />
                                        <button type="submit"><i class="fi-rs-search"></i></button>
                                    </form>
                                </div>
                            </div> *@
                            <div class="sidebar-widget-2 widget_create mb-50">
                                <a asp-action="CreateRecipe" asp-controller="Users" class=" btn btn-sm btn-success w-100">
                                Create Recipe <i class="fi-rs-arrow-right ms-1"></i>
                            </a></div>
                        </div>
                          <div class="sidebar-widget widget-category-2 mb-50">

                                <h5 class="section-title style-1 mb-30">TypeOfDish</h5>
                                @foreach (var item in Model.TypeOfDishForSidebar)
                                {
                                    <ul class="mb-10">
                                        <li>
                                            <a href=""> <img src="assets/imgs/theme/icons/category-1.svg"
                                                    alt="" />@item.Name
                                            </a><span class="count">@item.RecipeCount</span>
                                        </li>
                                    </ul>
                                }
                            </div>
                        <!-- Product sidebar Widget -->
                        @* <div class="sidebar-widget product-sidebar mb-50 p-30 bg-grey border-radius-10">
                            <h5 class="section-title style-1 mb-30">Trending Now</h5>
                            <div class="single-post clearfix">
                                <div class="image">
                                    <img src="assets/imgs/shop/thumbnail-3.jpg" alt="#" />
                                </div>
                                <div class="content pt-10">
                                    <h5><a href="shop-product-detail.html">Chen Cardigan</a></h5>
                                    <p class="price mb-0 mt-5">$99.50</p>
                                    <div class="product-rate">
                                        <div class="product-rating" style="width: 90%"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="single-post clearfix">
                                <div class="image">
                                    <img src="assets/imgs/shop/thumbnail-4.jpg" alt="#" />
                                </div>
                                <div class="content pt-10">
                                    <h6><a href="shop-product-detail.html">Chen Sweater</a></h6>
                                    <p class="price mb-0 mt-5">$89.50</p>
                                    <div class="product-rate">
                                        <div class="product-rating" style="width: 80%"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="single-post clearfix">
                                <div class="image">
                                    <img src="assets/imgs/shop/thumbnail-5.jpg" alt="#" />
                                </div>
                                <div class="content pt-10">
                                    <h6><a href="shop-product-detail.html">Colorful Jacket</a></h6>
                                    <p class="price mb-0 mt-5">$25</p>
                                    <div class="product-rate">
                                        <div class="product-rating" style="width: 60%"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="single-post clearfix">
                                <div class="image">
                                    <img src="assets/imgs/shop/thumbnail-6.jpg" alt="#" />
                                </div>
                                <div class="content pt-10">
                                    <h6><a href="shop-product-detail.html">Lorem, ipsum</a></h6>
                                    <p class="price mb-0 mt-5">$25</p>
                                    <div class="product-rate">
                                        <div class="product-rating" style="width: 60%"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="sidebar-widget widget_instagram mb-50">
                            <h5 class="section-title style-1 mb-30">Gallery</h5>
                            <div class="instagram-gellay">
                                <ul class="insta-feed">
                                    <li>
                                        <a href="#"><img class="border-radius-5" src="assets/imgs/shop/thumbnail-1.jpg"
                                                alt="" /></a>
                                    </li>
                                    <li>
                                        <a href="#"><img class="border-radius-5" src="assets/imgs/shop/thumbnail-2.jpg"
                                                alt="" /></a>
                                    </li>
                                    <li>
                                        <a href="#"><img class="border-radius-5" src="assets/imgs/shop/thumbnail-3.jpg"
                                                alt="" /></a>
                                    </li>
                                    <li>
                                        <a href="#"><img class="border-radius-5" src="assets/imgs/shop/thumbnail-4.jpg"
                                                alt="" /></a>
                                    </li>
                                    <li>
                                        <a href="#"><img class="border-radius-5" src="assets/imgs/shop/thumbnail-5.jpg"
                                                alt="" /></a>
                                    </li>
                                    <li>
                                        <a href="#"><img class="border-radius-5" src="assets/imgs/shop/thumbnail-6.jpg"
                                                alt="" /></a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <!--Tags-->
                        <div class="sidebar-widget widget-tags mb-50 pb-10">
                            <h5 class="section-title style-1 mb-30">Popular Tags</h5>
                            <ul class="tags-list">
                                <li class="hover-up">
                                    <a href="blog-category-grid.html"><i class="fi-rs-cross mr-10"></i>Cabbage</a>
                                </li>
                                <li class="hover-up">
                                    <a href="blog-category-grid.html"><i class="fi-rs-cross mr-10"></i>Broccoli</a>
                                </li>
                                <li class="hover-up">
                                    <a href="blog-category-grid.html"><i class="fi-rs-cross mr-10"></i>Smoothie</a>
                                </li>
                                <li class="hover-up">
                                    <a href="blog-category-grid.html"><i class="fi-rs-cross mr-10"></i>Fruit</a>
                                </li>
                                <li class="hover-up mr-0">
                                    <a href="blog-category-grid.html"><i class="fi-rs-cross mr-10"></i>Salad</a>
                                </li>
                                <li class="hover-up mr-0">
                                    <a href="blog-category-grid.html"><i class="fi-rs-cross mr-10"></i>Appetizer</a>
                                </li>
                            </ul>
                        </div>
                        <div class="banner-img wow fadeIn mb-50 animated d-lg-block d-none">
                            <img src="assets/imgs/banner/banner-11.png" alt="" />
                            <div class="banner-text">
                                <span>Oganic</span>
                                <h4>
                                    Save 17% <br />
                                    on <span class="text-brand">Oganic</span><br />
                                    Juice
                                </h4>
                            </div>
                        </div> *@
                    </div>
                </div>
            </div>
        </div>
        </div>
    </main>
   @await Html.PartialAsync("_Footer_User")
    <!-- Preloader Start -->
    <div id="preloader-active">
        <div class="preloader d-flex align-items-center justify-content-center">
            <div class="preloader-inner position-relative">
                <div class="text-center">
                    <img src="assets/imgs/theme/loading.gif" alt="" />
                </div>
            </div>
        </div>
    </div>

    <!-- ✅ jQuery (luôn phải đứng trước các plugin dùng jQuery) -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>

    <!-- ✅ Bootstrap 5 -->
    @* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"> *@
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- ✅ Quill (dùng cho trình soạn thảo) -->
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>

    <!-- ✅ multi.js -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/multi.js@0.5.0/multi.min.css">
    <!-- Vendor JS-->
    <script src="~/assets/js/vendor/modernizr-3.6.0.min.js"></script>
    <script src="~/assets/js/vendor/jquery-3.6.0.min.js"></script>
    <script src="~/assets/js/vendor/jquery-migrate-3.3.0.min.js"></script>
    <script src="~/assets/js/plugins/slick.js"></script>
    <script src="~/assets/js/plugins/jquery.syotimer.min.js"></script>
    <script src="~/assets/js/plugins/wow.js"></script>
    <script src="~/assets/js/plugins/perfect-scrollbar.js"></script>
    <script src="~/assets/js/plugins/magnific-popup.js"></script>
    <script src="~/assets/js/plugins/select2.min.js"></script>
    <script src="~/assets/js/plugins/waypoints.js"></script>
    <script src="~/assets/js/plugins/counterup.js"></script>
    <script src="~/assets/js/plugins/jquery.countdown.min.js"></script>
    <script src="~/assets/js/plugins/images-loaded.js"></script>
    <script src="~/assets/js/plugins/isotope.js"></script>
    <script src="~/assets/js/plugins/scrollup.js"></script>
    <script src="~/assets/js/plugins/jquery.vticker-min.js"></script>
    <script src="~/assets/js/plugins/jquery.theia.sticky.js"></script>
    <script src="~/assets/js/plugins/jquery.elevatezoom.js"></script>
    <!-- Template  JS -->
    <script src="~/assets/js/main.js?v=6.0"></script>
    <script src="~/assets/js/shop.js?v=6.0"></script>
    <script src="~/assets/js/gridjs/gridjs.umd.js"></script>
    <!-- Template  JS -->
    <script src="./assets/js/main.js?v=6.0"></script>
    <script src="./assets/js/shop.js?v=6.0"></script>


      <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

    <!-- ✅ Admin Template (nếu dùng layout riêng cho admin) -->
    <script src="assetsAdmin/libs/simplebar/simplebar.min.js"></script>
    <script src="assetsAdmin/libs/node-waves/waves.min.js"></script>
    <script src="assetsAdmin/libs/feather-icons/feather.min.js"></script>
    <script src="assetsAdmin/js/pages/plugins/lord-icon-2.1.0.js"></script>
    <script src="assetsAdmin/js/plugins.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/multi.js@0.5.1/multi.min.js"></script>



    <!-- Dropzone (nếu dùng) -->
    <script src="assetsAdmin/libs/dropzone/dropzone-min.js"></script>

    <!-- Prism (code highlight) -->
    <script src="assetsAdmin/libs/prismjs/prism.js"></script>

    <!-- Quản lý nội dung nâng cao -->
    <script src="assetsAdmin/js/pages/form-input-spin.init.js"></script>
    <script src="assetsAdmin/js/pages/flag-input.init.js"></script>

    <!-- Khởi tạo Quill hoặc form nâng cao -->
    <script src="assetsAdmin/js/pages/form-editor.init.js"></script>

    <!-- ✅ Quill nếu dùng bản local -->
    <!-- <script src="assetsAdmin/libs/quill/quill.min.js"></script> -->

    <!-- Admin app -->
    <script src="assetsAdmin/js/app.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
 <script>
      function toggleRecipeActive(id, isActive) {
        const newStatus = !isActive;
        const modalElement = document.getElementById(`toggleActiveModal-${id}`);

        // Ensure the modal exists
        let modal = bootstrap.Modal.getInstance(modalElement);
        if (!modal) {
            modal = new bootstrap.Modal(modalElement);
        }

        $.ajax({
            url: '@Url.Action("ToggleRecipeVisibility", "Users")',
            type: 'POST',
            data: {
                ID: id,
                isActive: newStatus
            },
            success: function (res) {
                if (res.success) {
                    // Success notification
                    new Notify({
                        status: 'success',
                        title: 'Success',
                        text: res.message,
                        effect: 'fade',
                        speed: 300,
                        showIcon: true,
                        showCloseButton: true,
                        autoclose: true,
                        autotimeout: 3000,
                        position: 'right top'
                    });

                    // Close modal after update
                    modal.hide();

                    // Update modal content
                    $(`#modal-status-text-${id}`).text(newStatus ? 'hide' : 'show');
                    $(`#modal-title-${id}`).text(`Confirm ${newStatus ? 'Hide' : 'Show'}`);

                    // Update outside toggle button
                    const btn = $(`#toggle-btn-${id}`);
                    btn.removeClass('btn-success btn-secondary')
                        .addClass(newStatus ? 'btn-success' : 'btn-secondary');
                    btn.find('i')
                        .removeClass('bi-eye-fill bi-eye-slash-fill')
                        .addClass(newStatus ? 'bi-eye-fill' : 'bi-eye-slash-fill');
                    btn.find('.button-label').text(newStatus ? 'Hide' : 'Show');

                    // Update confirm button inside modal
                    const confirmBtn = $(`#confirm-btn-${id}`);
                    confirmBtn.removeClass('btn-success btn-danger')
                        .addClass(newStatus ? 'btn-danger' : 'btn-success');

                    // Update onclick handler
                    confirmBtn.attr('onclick', `toggleRecipeActive('${id}', ${newStatus})`);
                } else {
                    new Notify({
                        status: 'error',
                        title: 'Error',
                        text: res.message || 'Update failed!',
                        effect: 'fade',
                        speed: 300,
                        showIcon: true,
                        showCloseButton: true,
                        autoclose: true,
                        autotimeout: 3000,
                        position: 'right top'
                    });
                    modal.hide();
                }
            },
            error: function () {
                new Notify({
                    status: 'error',
                    title: 'Error',
                    text: 'Failed to send request!',
                    effect: 'fade',
                    speed: 300,
                    showIcon: true,
                    showCloseButton: true,
                    autoclose: true,
                    autotimeout: 3000,
                    position: 'right top'
                });
                modal.hide();
            }
        });
    }
</script>



 <script>
      const allItems = @Html.Raw(Json.Serialize(Model.IngredientTags.Select(t => new { id = t.ID, name = t.Name })));

    function renderLists(form) {
        const recipeId = form.dataset.recipeId;
        const availableList = form.querySelector(`#availableList-${recipeId}`);
        const selectedList = form.querySelector(`#selectedList-${recipeId}`);
        const selectElement = form.querySelector(`#IngredientTags-${recipeId}`);
        const searchInput = form.querySelector(`#searchAll-${recipeId}`);
        const searchVal = searchInput ? searchInput.value.toLowerCase() : "";

        let selectedItems = JSON.parse(form.dataset.selectedTags || "[]");

        availableList.innerHTML = '';
        selectedList.innerHTML = '';
        Array.from(selectElement.options).forEach(option => option.selected = false);

        allItems.forEach(item => {
            const isSelected = selectedItems.includes(item.id);
            const matchSearch = item.name.toLowerCase().includes(searchVal);

            if (matchSearch) {
                const div = document.createElement('div');
                div.textContent = item.name;
                div.className = 'item';
                div.style.cursor = 'pointer';
                if (isSelected) div.classList.add('selected');

                div.onclick = () => {
                    if (selectedItems.includes(item.id)) {
                        selectedItems = selectedItems.filter(id => id !== item.id);
                    } else {
                        selectedItems.push(item.id);
                    }
                    form.dataset.selectedTags = JSON.stringify(selectedItems);
                    renderLists(form);
                };

                if (isSelected) selectedList.appendChild(div);
                else availableList.appendChild(div);
            }

            if (isSelected) {
                const option = selectElement.querySelector(`option[value="${item.id}"]`);
                if (option) option.selected = true;
            }
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.edit-recipe-form').forEach(function (form) {
            const searchInput = form.querySelector(`#searchAll-${form.dataset.recipeId}`);
            if (searchInput) {
                searchInput.addEventListener('input', () => renderLists(form));
            }
            renderLists(form);
        });
    });
    </script>
 <script>
       document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".edit-recipe-form").forEach(function (form) {
        const id = form.dataset.recipeId;

        const ingredientEditor = new Quill(`#editor-Ingredient-${id}`, { theme: 'snow' });
        const cookingEditor = new Quill(`#editor-CookingStep-${id}`, { theme: 'snow' });

        form.addEventListener("submit", function (e) {
            const ingredientHidden = document.getElementById(`IngredientHidden-${id}`);
            const cookingHidden = document.getElementById(`CookingStepHidden-${id}`);

            ingredientHidden.value = ingredientEditor.root.innerHTML;
            cookingHidden.value = cookingEditor.root.innerHTML;
        });
    });
});

    </script>
   <script>
    function getCustomTimeInMinutes(value, unit) {
        if (!value) return 0;
        const val = parseFloat(value);
        switch (unit) {
            case 'minutes': return val;
            case 'hours': return val * 60;
            case 'days': return val * 24 * 60;
            default: return val;
        }
    }

    function formatTimeForDatabase(totalMinutes) {
        if (totalMinutes <= 0) return "";

        const days = Math.floor(totalMinutes / (24 * 60));
        const hours = Math.floor((totalMinutes % (24 * 60)) / 60);
        const minutes = Math.floor(totalMinutes % 60);

        let parts = [];
        if (days > 0) parts.push(`${days} day${days > 1 ? 's' : ''}`);
        if (hours > 0) parts.push(`${hours} hour${hours > 1 ? 's' : ''}`);
        if (minutes > 0) parts.push(`${minutes} minute${minutes > 1 ? 's' : ''}`);
        return parts.join(' ');
    }

    function calculateTotal(form) {
        const prepValue = form.querySelector('input[name="PreparationValue"]').value;
        const prepUnit = form.querySelector('select[name="PreparationUnit"]').value;
        const prepQuick = form.querySelector('select[name="PreparationQuick"]').value;

        const cookValue = form.querySelector('input[name="CookingValue"]').value;
        const cookUnit = form.querySelector('select[name="CookingUnit"]').value;
        const cookQuick = form.querySelector('select[name="CookingQuick"]').value;

        let prepMinutes = prepQuick && !prepValue ? parseInt(prepQuick) : getCustomTimeInMinutes(prepValue, prepUnit);
        let cookMinutes = cookQuick && !cookValue ? parseInt(cookQuick) : getCustomTimeInMinutes(cookValue, cookUnit);

        const totalMinutes = prepMinutes + cookMinutes;
        const prepTimeString = formatTimeForDatabase(prepMinutes);
        const cookTimeString = formatTimeForDatabase(cookMinutes);
        const totalTimeString = formatTimeForDatabase(totalMinutes);

        const hiddenPrep = form.querySelector('#hiddenPrepTime');
        const hiddenCook = form.querySelector('#hiddenCookTime');
        const hiddenTotal = form.querySelector('#hiddenTotalTime');

        if (hiddenPrep) hiddenPrep.value = prepTimeString;
        if (hiddenCook) hiddenCook.value = cookTimeString;
        if (hiddenTotal) hiddenTotal.value = totalTimeString;

        const display = form.querySelector('#displayTotalTime');
        if (display) display.textContent = totalTimeString || '0 minute';
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.edit-recipe-form').forEach(function (form) {
            // Bind for Preparation Quick
            const prepQuick = form.querySelector('select[name="PreparationQuick"]');
            if (prepQuick) {
                prepQuick.addEventListener('change', function () {
                    const prepValue = form.querySelector('input[name="PreparationValue"]');
                    const prepUnit = form.querySelector('select[name="PreparationUnit"]');
                    const val = parseInt(this.value);

                    if (val >= 1440) {
                        prepValue.value = val / 1440;
                        prepUnit.value = 'days';
                    } else if (val >= 60) {
                        prepValue.value = val / 60;
                        prepUnit.value = 'hours';
                    } else {
                        prepValue.value = val;
                        prepUnit.value = 'minutes';
                    }

                    calculateTotal(form);
                });
            }

            // Bind for Cooking Quick
            const cookQuick = form.querySelector('select[name="CookingQuick"]');
            if (cookQuick) {
                cookQuick.addEventListener('change', function () {
                    const cookValue = form.querySelector('input[name="CookingValue"]');
                    const cookUnit = form.querySelector('select[name="CookingUnit"]');
                    const val = parseInt(this.value);

                    if (val >= 1440) {
                        cookValue.value = val / 1440;
                        cookUnit.value = 'days';
                    } else if (val >= 60) {
                        cookValue.value = val / 60;
                        cookUnit.value = 'hours';
                    } else {
                        cookValue.value = val;
                        cookUnit.value = 'minutes';
                    }

                    calculateTotal(form);
                });
            }

            // Bind for direct input changes
            ['PreparationValue', 'PreparationUnit', 'CookingValue', 'CookingUnit'].forEach(name => {
                form.querySelectorAll(`[name="${name}"]`).forEach(el => {
                    el.addEventListener('input', () => calculateTotal(form));
                    el.addEventListener('change', () => calculateTotal(form));
                });
            });

            // Initial calculation on load
            calculateTotal(form);
        });
    });
</script>

</body>

</html>