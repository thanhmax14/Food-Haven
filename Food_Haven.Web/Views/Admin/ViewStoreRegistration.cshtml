@model List<Repository.ViewModels.StoreViewModel>
@* @using Newtonsoft.Json *@
@using System.Text.Json

<!doctype html>
<html lang="en" data-layout="vertical" data-topbar="light" data-sidebar="dark" data-sidebar-size="lg"
    data-sidebar-image="none" data-preloader="disable" data-theme="default" data-theme-colors="default">


<!-- Mirrored from EasyFood.com/velzon/html/master/forms-layouts.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 26 Feb 2025 12:22:12 GMT -->

<head>

    <meta charset="utf-8" />
    <title>Admin - Registration Store List</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Premium Multipurpose Admin & Dashboard Template" name="description" />
    <meta content="EasyFood" name="author" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/assetsAdmin/images/favicon.svg">

    <!-- gridjs css -->
    <link rel="stylesheet" href="~/assetsAdmin/libs/gridjs/theme/mermaid.min.css">

    <!-- Layout config Js -->
    <script src="~/assetsAdmin/js/layout.js"></script>
    <!-- Bootstrap Css -->
    <link href="~/assetsAdmin/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- Icons Css -->
    <link href="~/assetsAdmin/css/icons.min.css" rel="stylesheet" type="text/css" />
    <!-- App Css-->
    <link href="~/assetsAdmin/css/app.min.css" rel="stylesheet" type="text/css" />
    <!-- custom Css-->
    <link href="~/assetsAdmin/css/custom.min.css" rel="stylesheet" type="text/css" />

</head>

<body>

    <!-- Begin page -->
    <div id="layout-wrapper">

        @await Html.PartialAsync("_headeradmin")


        <!-- ========== App Menu ========== -->
        <div class="app-menu navbar-menu">
            <!-- LOGO -->
            <div class="navbar-brand-box">
                <!-- Dark Logo-->
                <a class="logo logo-dark">
                    <span class="logo-sm">
                        <img src="~/assetsAdmin/images/logo-sm.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/assetsAdmin/images/logo-dark.svg" alt="" height="35">
                    </span>
                </a>
                <!-- Light Logo-->
                <a class="logo logo-light">
                    <span class="logo-sm">
                        <img src="~/assetsAdmin/images/logo-sm.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="~/assetsAdmin/images/logo-light.svg" alt="" height="35">
                    </span>
                </a>
                <button type="button" class="btn btn-sm p-0 fs-20 header-item float-end btn-vertical-sm-hover"
                    id="vertical-hover">
                    <i class="ri-record-circle-line"></i>
                </button>
            </div>

            <div id="scrollbar">
                <div class="container-fluid">
                    <div id="two-column-menu">
                    </div>
                    <ul class="navbar-nav" id="navbar-nav">
                        <li class="menu-title"><span data-key="t-menu">Menu</span></li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="Index">
                                <i class=" ri-pie-chart-line"></i> <span>Revenue Statistics</span>
                            </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link menu-link" asp-controller="Admin" asp-action="WithdrawList">
                            <i class="ri-exchange-dollar-line"></i> <span>Withdrawal Requests From Users</span>
                        </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link menu-link" asp-controller="Admin" asp-action="Managercomplant">
                            <i class="ri-error-warning-line"></i> <span>Order Complaint Reports From Seller</span>
                        </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ManagerUser">
                                <i class="ri-account-circle-line"></i> <span>User Accounts</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ManagementSeller">
                                <i class="ri-user-add-line"></i> <span>Seller Registration Requests</span>
                            </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link menu-link active" asp-controller="Admin" asp-action="ViewStoreRegistration">
                            <i class="ri-file-add-line"></i> <span>Store Registration Requests</span>
                        </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ViewAdminStore">
                                <i class="ri-store-2-line"></i> <span>Store</span>
                            </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link menu-link" asp-controller="Admin" asp-action="ManagementReportStore">
                            <i class="ri-alert-line"></i> <span>Store Reports From User</span>
                        </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ViewCategories">
                                <i class="ri-folder-2-line"></i> <span>Categories</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ManagementRecipe">
                                <i class="ri-restaurant-2-line"></i> <span>Cooking Recipes</span>
                            </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link menu-link" asp-controller="Admin" asp-action="GetAllIngredientTag">
                            <i class=" ri-price-tag-3-line"></i> <span>Ingredient Tag</span>
                        </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link menu-link" asp-controller="Admin" asp-action="GetAllTypeOfDish">
                            <i class="ri-restaurant-line"></i> <span>Type of Dish</span>
                        </a>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link menu-link" asp-controller="Admin" asp-action="ManagerVoucher">
                            <i class=" ri-coupon-2-line"></i> <span>Voucher</span>
                        </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="Chat">
                                <i class="ri-chat-3-line"></i> <span>Chat</span>
                            </a>
                        </li>
                        <!--<li class="nav-item">
                            <a class="nav-link menu-link" href="">
                                <i class="ri-notification-2-line"></i> <span>Notifications</span>
                            </a>
                        </li> -->
                    </ul>
                </div>
            </div>
            <!-- Sidebar -->
        </div>
        <div class="sidebar-background"></div>
    </div>
    <!-- Left Sidebar End -->
    <!-- Vertical Overlay-->
    <div class="vertical-overlay"></div>

    <!-- ============================================================== -->
    <!-- Start right Content here -->
    <!-- ============================================================== -->
    <div class="main-content">

        <div class="page-content">
            <div class="container-fluid">

                <!-- start page title -->
                <div class="row">
                    <div class="col-12">
                        <div
                            class="page-title-box d-sm-flex align-items-center justify-content-between bg-galaxy-transparent">
                            <h4 class="mb-sm-0">Store Registration List</h4>

                            @* <div class="page-title-right">
                                <ol class="breadcrumb m-0">
                                    <li class="breadcrumb-item"><a href="javascript: void(0);">Tables</a></li>
                                    <li class="breadcrumb-item active">Registration Store List</li>
                                </ol>
                            </div> *@

                        </div>
                    </div>
                </div>
                <!-- end page title -->

                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title mb-0 flex-grow-1">Registration Store List</h4>
                            </div><!-- end card header -->

                            <div class="card-body">
                                <div id="table-feedback"></div>
                            </div><!-- end card-body -->

                        </div><!-- end card -->
                    </div>
                    <!-- end col -->
                </div>
                <!-- end row -->


                <script>
                    document.addEventListener("DOMContentLoaded", function () {
                        if (document.getElementById("table-feedback")) {
                            let storeData = @Html.Raw(Json.Serialize(Model));

                            new gridjs.Grid({
                                columns: [
                                    { name: "STT", width: "60px" },
                                    { name: "ID", hidden: true },
                                    { name: "Store Name", width: "200px" },
                                    { name: "UserName", width: "150px" },
                                    { name: "Created Date", width: "150px", hidden: true },
                                    { name: "Modified Date", width: "150px", hidden: true },
                                    { name: "Short Descriptions", width: "250px" },
                                    { name: "Long Descriptions", width: "300px", hidden: true },
                                    { name: "Address", width: "250px" },
                                    { name: "Phone", width: "150px" },
                                    {
                                        name: "Image", hidden: true,
                                        width: "100px",
                                        formatter: (cell) => gridjs.html(`
                                            <img src="${cell}" alt="Store Image" width="50" height="50" style="border-radius: 5px;">
                                        `)
                                    },
                                    {
                                        name: "Status",
                                        width: "150px",
                                        formatter: (cell) => {
                                            const statusClassMap = {
                                                approved: "bg-success-subtle text-success",
                                                rejected: "bg-danger-subtle text-danger",
                                                pending: "bg-warning-subtle text-warning"
                                            };

                                            const statusKey = (cell || "").toLowerCase();
                                            const statusClass = statusClassMap[statusKey] || "bg-secondary-subtle text-secondary";

                                            // Viết hoa chữ cái đầu
                                            const capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();

                                            return gridjs.html(`<span class="badge ${statusClass}">${capitalize(cell)}</span>`);
                                        }
                                    },
                                    {
                                        name: "Actions",
                                        width: "120px",
                                        formatter: (_, row) => {
                                            let storeId = row.cells[1].data;

                                            return gridjs.html(`
                                <div class="d-flex flex-wrap">
                                    <a href="/Admin/ViewStoreDetail/${storeId}" class="btn btn-sm btn-primary me-1 mb-1">
                                         <i class="ri-pencil-fill align-bottom me-1"></i> Details
                                    </a>
                                </div>
                            `);
                                        }
                                    }
                                ],
                                pagination: {
                                    enabled: true,
                                    limit: 10,
                                    summary: true
                                },
                                search: true,
                                sort: true,
                                data: storeData.map((store, index) => [
                                    index + 1, // STT
                                    store.id,
                                    store.name,
                                    store.userName,
                                    formatDate(store.createdDate),
                                    formatDate(store.modifiedDate) ?? "N/A",
                                    store.shortDescriptions,
                                    store.longDescriptions,
                                    store.address,
                                    store.phone,
                                    store.img,
                                    store.status
                                ])
                            }).render(document.getElementById("table-feedback"));
                        }
                    });

                    function updateStoreStatus(storeId, newStatus) {
                        let actionText = newStatus === "Approved" ? "Accept" : "Reject";

                        Swal.fire({
                            title: `Are you sure?`,
                            text: `Do you want to ${actionText} this store?`,
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: newStatus === "Approved" ? "#28a745" : "#dc3545",
                            cancelButtonColor: "#6c757d",
                            confirmButtonText: `Yes, ${actionText.toLowerCase()} it!`
                        }).then((result) => {
                            if (result.isConfirmed) {
                                fetch(`/Admin/UpdateStoreStatus/${storeId}/${newStatus}`, {  // Truyền storeId vào URL
                                    method: "POST",
                                    headers: { "Content-Type": "application/json" }
                                })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire({
                                                title: "Success!",
                                                text: `Store has been ${newStatus.toLowerCase()} successfully.`,
                                                icon: "success",
                                                timer: 1500,
                                                showConfirmButton: false
                                            }).then(() => location.reload());
                                        } else {
                                            Swal.fire("Error!", "Failed to update store status.", "error");
                                        }
                                    })
                                    .catch(error => {
                                        console.error("Error updating store status:", error);
                                        Swal.fire("Error!", "An unexpected error occurred.", "error");
                                    });
                            }
                        });
                    }

                    // Format ngày (dd/MM/yyyy)
                    function formatDate(dateString) {
                        if (!dateString) return "";
                        let date = new Date(dateString);
                        return date.toLocaleDateString("en-GB");
                    }

                </script>

                <!-- end row -->

            </div>
            <!-- container-fluid -->
        </div>
        <!-- End Page-content -->
        @await Html.PartialAsync("_Footer_Admin_Seller")
    </div>
    <!-- end main content-->
    </div>
    <!-- END layout-wrapper -->
    <!--start back-to-top-->
    <button onclick="topFunction()" class="btn btn-danger btn-icon" id="back-to-top">
        <i class="ri-arrow-up-line"></i>
    </button>
    <!--end back-to-top-->
    <!--preloader-->
    <div id="preloader">
        <div id="status">
            <div class="spinner-border text-primary avatar-sm" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>




    <!-- JAVASCRIPT -->
    <script src="~/assetsAdmin/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/assetsAdmin/libs/simplebar/simplebar.min.js"></script>
    <script src="~/assetsAdmin/libs/node-waves/waves.min.js"></script>
    <script src="~/assetsAdmin/libs/feather-icons/feather.min.js"></script>
    <script src="~/assetsAdmin/js/pages/plugins/lord-icon-2.1.0.js"></script>
    <script src="~/assetsAdmin/js/plugins.js"></script>

    <!-- prismjs plugin -->
    <script src="~/assetsAdmin/libs/prismjs/prism.js"></script>

    <!-- gridjs js -->
    <script src="~/assetsAdmin/libs/gridjs/gridjs.umd.js"></script>
    <!-- gridjs init -->
    <script src="~/assetsAdmin/js/pages/gridjs.init.js"></script>

    <!-- App js -->
    <script src="~/assetsAdmin/js/app.js"></script>

</body>


<!-- Mirrored from EasyFood.com/velzon/html/master/forms-layouts.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 26 Feb 2025 12:22:12 GMT -->

</html>