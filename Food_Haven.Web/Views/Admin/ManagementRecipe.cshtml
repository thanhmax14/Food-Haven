@model List<Repository.ViewModels.RecipeViewModels>
@using Newtonsoft.Json
@using System.Text.Json

<!doctype html>
<html lang="en" data-layout="vertical" data-topbar="light" data-sidebar="dark" data-sidebar-size="lg"
    data-sidebar-image="none" data-preloader="disable" data-theme="default" data-theme-colors="default">


<!-- Mirrored from EasyFood.com/velzon/html/master/forms-layouts.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 26 Feb 2025 12:22:12 GMT -->

<head>

    <meta charset="utf-8" />
    <title>EasyFood | Seller</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta content="Premium Multipurpose Admin & Dashboard Template" name="description" />
    <meta content="EasyFood" name="author" />
    <!-- App favicon -->
    <link rel="shortcut icon" href="~/assetsAdmin/images/favicon.ico">

    <!-- gridjs css -->
    <link rel="stylesheet" href="~/assetsAdmin/libs/gridjs/theme/mermaid.min.css">

    <!-- Layout config Js -->
    <script src="~/assetsAdmin/js/layout.js"></script>
    <!-- Bootstrap Css -->
    <link href="~/assetsAdmin/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- Icons Css -->
    <link href="~/assetsAdmin/css/icons.min.css" rel="stylesheet" type="text/css" />
    <!-- App Css-->
    <link href="~/assetsAdmin/css/app.min.css" rel="stylesheet" type="text/css" />
    <!-- custom Css-->
    <link href="~/assetsAdmin/css/custom.min.css" rel="stylesheet" type="text/css" />

</head>

<body>

    <!-- Begin page -->
    <div id="layout-wrapper">

        <header id="page-topbar">
            <div class="layout-width">
                <div class="navbar-header">
                    <div class="d-flex">
                        <!-- LOGO -->
                        <div class="navbar-brand-box horizontal-logo">
                            <a href="" class="logo logo-dark">
                                <span class="logo-sm">
                                    <img src="/assets/imgs/theme/logo.svg" alt="" height="22">
                                </span>
                                <span class="logo-lg">
                                    <img src="/assets/imgs/theme/logo.svg" alt="" height="17">
                                </span>
                            </a>

                            <a href="" class="logo logo-light">
                                <span class="logo-sm">
                                    <img src="/assets/imgs/theme/logo.svg" alt="" height="22">
                                </span>
                                <span class="logo-lg">
                                    <img src="/assets/imgs/theme/logo.svg" alt="" height="17">
                                </span>
                            </a>
                        </div>

                        <button type="button"
                            class="btn btn-sm px-3 fs-16 header-item vertical-menu-btn topnav-hamburger material-shadow-none"
                            id="topnav-hamburger-icon">
                            <span class="hamburger-icon">
                                <span></span>
                                <span></span>
                                <span></span>
                            </span>
                        </button>

                        <!-- App Search-->

                    </div>
                    <div class="d-flex align-items-center">
                        <div class="dropdown d-md-none topbar-head-dropdown header-item">
                            <button type="button"
                                class="btn btn-icon btn-topbar material-shadow-none btn-ghost-secondary rounded-circle"
                                id="page-header-search-dropdown" data-bs-toggle="dropdown" aria-haspopup="true"
                                aria-expanded="false">
                                <i class="bx bx-search fs-22"></i>
                            </button>
                            <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end p-0"
                                aria-labelledby="page-header-search-dropdown">
                                <form class="p-3">
                                    <div class="form-group m-0">
                                        <div class="input-group">
                                            <input type="text" class="form-control" placeholder="Search ..."
                                                aria-label="Recipient's username">
                                            <button class="btn btn-primary" type="submit">
                                                <i class="mdi mdi-magnify"></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                        <div class="ms-1 header-item d-none d-sm-flex">
                            <button type="button"
                                class="btn btn-icon btn-topbar material-shadow-none btn-ghost-secondary rounded-circle light-dark-mode">
                                <i class='bx bx-moon fs-22'></i>
                            </button>
                        </div>
                        <div class="dropdown ms-sm-3 header-item topbar-user">
                            <button type="button" class="btn material-shadow-none" id="page-header-user-dropdown"
                                data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <span class="d-flex align-items-center">
                                    <img class="rounded-circle header-profile-user"
                                        src="assets/images/users/avatar-1.jpg" alt="Header Avatar">
                                    <span class="text-start ms-xl-2">
                                        <span class="d-none d-xl-inline-block ms-1 fw-medium user-name-text">
                                            Anna
                                            Adame
                                        </span>
                                        <span class="d-none d-xl-block ms-1 fs-12 user-name-sub-text">Founder</span>
                                    </span>
                                </span>
                            </button>
                            <div class="dropdown-menu dropdown-menu-end">
                                <!-- item-->
                                <h6 class="dropdown-header">Welcome Anna!</h6>
                                <a class="dropdown-item" asp-controller="Users">
                                    <i class="mdi mdi-account-circle text-muted fs-16 align-middle me-1"></i> <span
                                        class="align-middle">Profile</span>
                                </a>

                                <a class="dropdown-item" asp-controller="Home" asp-action="Logout">
                                    <i class="mdi mdi-logout text-muted fs-16 align-middle me-1"></i> <span
                                        class="align-middle" data-key="t-logout">Logout</span>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </header>


        <!-- ========== App Menu ========== -->
        <div class="app-menu navbar-menu">
            <!-- LOGO -->
            <div class="navbar-brand-box">
                <!-- Dark Logo-->
                <a href="" class="logo logo-dark">
                    <span class="logo-sm">
                        <img src="/assets/imgs/theme/logo.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="/assets/imgs/theme/logo.svg" alt="" height="17">
                    </span>
                </a>
                <!-- Light Logo-->
                <a href="" class="logo logo-light">
                    <span class="logo-sm">
                        <img src="/assets/imgs/theme/logo.svg" alt="" height="22">
                    </span>
                    <span class="logo-lg">
                        <img src="/assets/imgs/theme/logo.svg" alt="" height="17">
                    </span>
                </a>
                <button type="button" class="btn btn-sm p-0 fs-20 header-item float-end btn-vertical-sm-hover"
                    id="vertical-hover">
                    <i class="ri-record-circle-line"></i>
                </button>
            </div>

            <div id="scrollbar">
                <div class="container-fluid">
                    <div id="two-column-menu">
                    </div>
                    <ul class="navbar-nav" id="navbar-nav">
                        <li class="menu-title"><span data-key="t-menu">Menu</span></li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="UserStatistics">
                                <i class="ri-bar-chart-box-line"></i> <span>User and Seller Statistics</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="Revenue">
                                <i class=" ri-pie-chart-line"></i> <span>Revenue Statistics</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="Index">
                                <i class="ri-account-circle-line"></i> <span>User Accounts</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ManagementSeller">
                                <i class="ri-user-add-line"></i> <span>Seller Registration Requests</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ViewAdminStore">
                                <i class="ri-store-2-line"></i> <span>Store</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link action" asp-controller="Admin"
                                asp-action="ViewStoreRegistration">
                                <i class="ri-file-add-line"></i> <span>Store Registration Requests</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="ViewCategories">
                                <i class="ri-folder-2-line"></i> <span>Categories</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" asp-controller="Admin" asp-action="WithdrawList">
                                <i class="ri-exchange-dollar-line"></i> <span>Withdrawal Requests From Users</span>
                            </a>
                        </li>
                        <!-- <li class="nav-item">
                            <a class="nav-link menu-link" href="">
                                <i class="ri-alert-line"></i> <span>Store Reports Form User</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" href="">
                                <i class="ri-error-warning-line"></i> <span>Order Complaintt Reports From Seller</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" href="">
                                <i class="ri-restaurant-2-line"></i> <span>Cooking Recipes</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" href="">
                                <i class=" ri-chat-3-line"></i> <span>Chat</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link menu-link" href="">
                                <i class="ri-notification-2-line"></i> <span>Notifications</span>
                            </a>
                        </li> -->
                    </ul>
                </div>

            </div>
            <!-- Sidebar -->
        </div>
        <div class="sidebar-background"></div>
    </div>
    <!-- Left Sidebar End -->
    <!-- Vertical Overlay-->
    <div class="vertical-overlay"></div>

    <!-- ============================================================== -->
    <!-- Start right Content here -->
    <!-- ============================================================== -->
    <div class="main-content">

        <div class="page-content">
            <div class="container-fluid">

                <!-- start page title -->
                <div class="row">
                    <div class="col-12">
                        <div
                            class="page-title-box d-sm-flex align-items-center justify-content-between bg-galaxy-transparent">
                            <h4 class="mb-sm-0">Management Recipe</h4>

                            <div class="page-title-right">
                                <ol class="breadcrumb m-0">
                                    <li class="breadcrumb-item"><a href="javascript: void(0);">Tables</a></li>
                                    <li class="breadcrumb-item active">Management Recipe</li>
                                </ol>
                            </div>

                        </div>
                    </div>
                </div>
                <!-- end page title -->

                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                                <h4 class="card-title mb-0 flex-grow-1">Management Recipe</h4>
                            </div><!-- end card header -->

                            <div class="card-body">
                                <div id="table-recipe"></div>
                            </div><!-- end card-body -->

                        </div><!-- end card -->
                    </div>
                    <!-- end col -->
                </div>
                <!-- end row -->

                <script>
                    document.addEventListener("DOMContentLoaded", function () {
                        if (document.getElementById("table-recipe")) {
                            let recipeData = @Html.Raw(Json.Serialize(Model));

                            new gridjs.Grid({
                                columns: [
                                    { name: "ID", hidden: true },
                                    { name: "Username", width: "150px" },
                                    { name: "Title", width: "150px" },
                                    { name: "TotalTime", width: "100px" },
                                    {
                                        name: "ThumbnailImage",
                                        width: "100px",
                                        formatter: (cell) => gridjs.html(`
                            <img src="${cell}" alt="Recipe Image" width="50" height="50" style="border-radius: 5px;">
                        `)
                                    },
                                    {
                                        name: "status",
                                        width: "150px",
                                        formatter: (cell) => {
                                            const statusClassMap = {
                                                approved: "bg-success-subtle text-success",
                                                rejected: "bg-danger-subtle text-danger",
                                                pending: "bg-warning-subtle text-warning"
                                            };
                                            const statusKey = (cell || "").toLowerCase();
                                            const statusClass = statusClassMap[statusKey] || "bg-secondary-subtle text-secondary";
                                            const capitalize = (str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();
                                            return gridjs.html(`<span class="badge ${statusClass}">${capitalize(cell)}</span>`);
                                        }
                                    },
                                    {
                                        name: "IsActive",
                                        width: "100px",
                                        formatter: (cell) => {
                                            const isActive = cell === true || cell === "true";
                                            const statusClass = isActive ? "bg-success-subtle text-success" : "bg-danger-subtle text-danger";
                                            const label = isActive ? "Active" : "Hidden";
                                            return gridjs.html(`<span class="badge ${statusClass}">${label}</span>`);
                                        }
                                    },
                                    {
                                        name: "Actions",
                                        width: "200px",
                                        formatter: (_, row) => {
                                            const recipeId = row.cells[0]?.data;
                                            const status = (row.cells[5]?.data || "").toLowerCase();
                                            const isActive = row.cells[6]?.data === true || row.cells[6]?.data === "true";

                                            if (!recipeId) return gridjs.html("");

                                            let actionButtons = "";

                                            if (status === "pending") {
                                                actionButtons += `
                                    <button class="dropdown-item" onclick="updateRecipeStatus('${recipeId}', 'Approved')">
                                        <i class="ri-check-line align-bottom me-2 text-success"></i> Accept
                                    </button>
                                    <button class="dropdown-item" onclick="updateRecipeStatus('${recipeId}', 'Rejected')">
                                        <i class="ri-close-line align-bottom me-2 text-danger"></i> Reject
                                    </button>`;
                                            }

                                            if (status === "reject") {
                                                actionButtons += `
                                    <button class="dropdown-item" onclick="updateRecipeStatus('${recipeId}', 'Approved')">
                                        <i class="ri-check-line align-bottom me-2 text-success"></i> Accept
                                    </button>`;
                                            }

                                            if (status === "accept") {
                                                actionButtons += `
    <button class="dropdown-item" onclick="updateRecipeStatus('${recipeId}', 'Rejected')">
        <i class="ri-close-line align-bottom me-2 text-danger"></i> Reject
    </button>`;
                                            }


                                            // Chỉ hiển thị 1 nút: Hide nếu đang Active, Show nếu đang Hidden
                                            if (isActive) {
                                                actionButtons += `
                                    <button class="dropdown-item" onclick="toggleVisibility('${recipeId}', 'Hide')">
                                        <i class="ri-eye-off-line align-bottom me-2 text-warning"></i> Hide
                                    </button>`;
                                            } else {
                                                actionButtons += `
                                    <button class="dropdown-item" onclick="toggleVisibility('${recipeId}', 'Show')">
                                        <i class="ri-eye-line align-bottom me-2 text-primary"></i> Show
                                    </button>`;
                                            }

                                            return gridjs.html(`
                                <div class="dropdown">
                                    <button class="btn btn-soft-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                        <i class="ri-more-fill align-middle"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end">
                                        ${actionButtons}
                                    </ul>
                                </div>
                            `);
                                        }



                                    }
                                ],
                                pagination: {
                                    enabled: true,
                                    limit: 10,
                                    summary: true
                                },
                                search: true,
                                sort: true,
                                data: recipeData.map(recipe => {
                                    return [
                                        recipe.ID || recipe.id,
                                        recipe.username || recipe.Username,
                                        recipe.title || recipe.Title,
                                        recipe.totalTime || recipe.TotalTime,
                                        recipe.thumbnailImage || recipe.ThumbnailImage,
                                        recipe.status || recipe.Status,
                                        recipe.isActive || recipe.IsActive
                                    ];
                                })
                            }).render(document.getElementById("table-recipe"));
                        }
                    });

                    function updateRecipeStatus(recipeId, newStatus) {
                        if (!recipeId) {
                            Swal.fire("Error!", "Recipe ID is missing or invalid.", "error");
                            return;
                        }

                        let actionText = newStatus === "Approved" ? "accept" : "reject";

                        Swal.fire({
                            title: `Are you sure?`,
                            text: `Do you want to ${actionText} this recipe?`,
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: newStatus === "Approved" ? "#28a745" : "#dc3545",
                            cancelButtonColor: "#6c757d",
                            confirmButtonText: `Yes, ${actionText} it!`
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const url = `/Admin/UpdateRecipeStatus/${recipeId}/${newStatus}`;
                                fetch(url, {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]')?.value || ""
                                    }
                                })
                                    .then(response => {
                                        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                                        return response.json();
                                    })
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire({
                                                title: "Success!",
                                                text: `Recipe has been ${actionText}ed successfully.`,
                                                icon: "success",
                                                timer: 1500,
                                                showConfirmButton: false
                                            }).then(() => location.reload());
                                        } else {
                                            Swal.fire("Error!", data.message || "Failed to update recipe status.", "error");
                                        }
                                    })
                                    .catch(error => {
                                        Swal.fire("Error!", "Unexpected error: " + error.message, "error");
                                    });
                            }
                        });
                    }

                    function toggleVisibility(recipeId, action) {
                        if (!recipeId) {
                            Swal.fire("Error!", "Invalid Recipe ID!", "error");
                            return;
                        }

                        const confirmText = action === "Hide" ? "hide" : "show";
                        const confirmColor = action === "Hide" ? "#ffc107" : "#0d6efd";

                        Swal.fire({
                            title: `Are you sure?`,
                            text: `Do you want to ${confirmText} this recipe?`,
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: confirmColor,
                            cancelButtonColor: "#6c757d",
                            confirmButtonText: `Yes, ${confirmText} it!`
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const url = `/Admin/ToggleRecipeVisibility/${recipeId}/${action}`;
                                fetch(url, {
                                    method: "POST",
                                    headers: {
                                        "Content-Type": "application/json",
                                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]')?.value || ""
                                    }
                                })
                                    .then(response => {
                                        if (!response.ok) throw new Error("HTTP error: " + response.status);
                                        return response.json();
                                    })
                                    .then(data => {
                                        if (data.success) {
                                            Swal.fire("Success!", `Recipe has been ${confirmText}d successfully.`, "success")
                                                .then(() => location.reload());
                                        } else {
                                            Swal.fire("Error!", data.message || "Operation failed.", "error");
                                        }
                                    })
                                    .catch(error => {
                                        Swal.fire("Error!", "An error occurred: " + error.message, "error");
                                    });
                            }
                        });
                    }
                </script>



                <!-- end row -->

            </div>
            <!-- container-fluid -->
        </div>
        <!-- End Page-content -->
        <footer class="footer">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-sm-6">
                        <script>document.write(new Date().getFullYear())</script> © Velzon.
                    </div>
                    <div class="col-sm-6">
                        <div class="text-sm-end d-none d-sm-block">
                            Design & Develop by EasyFood
                        </div>
                    </div>
                </div>
            </div>
        </footer>
    </div>
    <!-- end main content-->
    </div>
    <!-- END layout-wrapper -->
    <!--start back-to-top-->
    <button onclick="topFunction()" class="btn btn-danger btn-icon" id="back-to-top">
        <i class="ri-arrow-up-line"></i>
    </button>
    <!--end back-to-top-->
    <!--preloader-->
    <div id="preloader">
        <div id="status">
            <div class="spinner-border text-primary avatar-sm" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>




    <!-- JAVASCRIPT -->
    <script src="~/assetsAdmin/libs/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/assetsAdmin/libs/simplebar/simplebar.min.js"></script>
    <script src="~/assetsAdmin/libs/node-waves/waves.min.js"></script>
    <script src="~/assetsAdmin/libs/feather-icons/feather.min.js"></script>
    <script src="~/assetsAdmin/js/pages/plugins/lord-icon-2.1.0.js"></script>
    <script src="~/assetsAdmin/js/plugins.js"></script>

    <!-- prismjs plugin -->
    <script src="~/assetsAdmin/libs/prismjs/prism.js"></script>

    <!-- gridjs js -->
    <script src="~/assetsAdmin/libs/gridjs/gridjs.umd.js"></script>
    <!-- gridjs init -->
    <script src="~/assetsAdmin/js/pages/gridjs.init.js"></script>

    <!-- App js -->
    <script src="~/assetsAdmin/js/app.js"></script>

</body>


<!-- Mirrored from EasyFood.com/velzon/html/master/forms-layouts.html by HTTrack Website Copier/3.x [XR&CO'2014], Wed, 26 Feb 2025 12:22:12 GMT -->

</html>